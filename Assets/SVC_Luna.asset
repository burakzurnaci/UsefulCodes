%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: -777816280, guid: 71013b005db99d548b56c6b0f5987998, type: 3}
  m_Name: SVC_Luna
  m_EditorClassIdentifier: 
  _svcLunaVersion: 1
  _shaderVariants:
  - shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords: []
  - shader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords: []
  - shader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords:
    - SHADOWS_SPLIT_SPHERES
  - shader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords:
    - SHADOWS_SINGLE_CASCADE
  - shader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords:
    - SHADOWS_SINGLE_CASCADE
    - SHADOWS_SPLIT_SPHERES
  - shader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 1
    upToDate: 1
    keywords: []
  - shader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 1
    upToDate: 1
    keywords:
    - SHADOWS_SPLIT_SPHERES
  - shader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 1
    upToDate: 1
    keywords:
    - SHADOWS_SINGLE_CASCADE
  - shader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 1
    upToDate: 1
    keywords:
    - SHADOWS_SINGLE_CASCADE
    - SHADOWS_SPLIT_SPHERES
  - shader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 2
    upToDate: 1
    keywords: []
  - shader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 2
    upToDate: 1
    keywords:
    - SHADOWS_SPLIT_SPHERES
  - shader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 2
    upToDate: 1
    keywords:
    - SHADOWS_SINGLE_CASCADE
  - shader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 2
    upToDate: 1
    keywords:
    - SHADOWS_SINGLE_CASCADE
    - SHADOWS_SPLIT_SPHERES
  - shader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 3
    upToDate: 1
    keywords: []
  - shader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 3
    upToDate: 1
    keywords:
    - SHADOWS_SPLIT_SPHERES
  - shader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 3
    upToDate: 1
    keywords:
    - SHADOWS_SINGLE_CASCADE
  - shader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 3
    upToDate: 1
    keywords:
    - SHADOWS_SINGLE_CASCADE
    - SHADOWS_SPLIT_SPHERES
  - shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords: []
  - shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords:
    - UNITY_UI_ALPHACLIP
  - shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords:
    - UNITY_UI_CLIP_RECT
  - shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  - shader: {fileID: 4800000, guid: 933532a4fcc9baf4fa0491de14d08ed7, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 1
    upToDate: 1
    keywords: []
  - shader: {fileID: 4800000, guid: 933532a4fcc9baf4fa0491de14d08ed7, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 1
    upToDate: 1
    keywords:
    - _ADDITIONAL_LIGHTS
  - shader: {fileID: 4800000, guid: 933532a4fcc9baf4fa0491de14d08ed7, type: 3}
    passType: 8
    passId: 1
    subShaderIndex: 1
    upToDate: 1
    keywords: []
  - shader: {fileID: 4800000, guid: e6e9a19c3678ded42a3bc431ebef7dbd, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords: []
  - shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords:
    - _SUNDISK_NONE
  - shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords:
    - _SUNDISK_SIMPLE
  - shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 1
    keywords:
    - _SUNDISK_HIGH_QUALITY
  _usedByLunaBuild:
  - shader: {fileID: 4800000, guid: 933532a4fcc9baf4fa0491de14d08ed7, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords: []
  - shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_SIMPLE
  _includedShaderVariants: []
  _excludedShaderVariants: []
  version: 45
  _shaderParsedShaders:
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nvarying
            highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _Color;\nuniform highp sampler2D _MainTex;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvoid
            main()\n{\n    u_xlat0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0
            = u_xlat0 * _Color;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: ALWAYS
        definedKeywords: []
        keywordGroups: []
        ContainsInvalidVariant: 0
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: ALWAYS
        UsePass: 0
      sourceShader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
      Tags: []
      UsePass: 0
    Shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - ShaderVariants: []
        definedKeywords: []
        keywordGroups: []
        ContainsInvalidVariant: 0
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: ALWAYS
        UsePass: 0
      sourceShader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
      Tags: []
      UsePass: 0
    Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
    ShaderPath: Library/unity default resources
    ShaderDefinedKeywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw
            = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy *
            hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz
            * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w
            = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 _LightSplitsNear;\nuniform
            \tvec4 _LightSplitsFar;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform
            \tmediump vec4 _LightShadowData;\nuniform highp sampler2D _CameraDepthTexture;\nuniform
            highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp
            vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nbvec4 u_xlatb1;\nvec4
            u_xlat2;\nbvec4 u_xlatb2;\nvec3 u_xlat3;\nmediump float u_xlat16_4;\nfloat
            u_xlat5;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0.x = texture2D(_CameraDepthTexture,
            vs_TEXCOORD0.xy).x;\n    u_xlat5 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n   
            u_xlat5 = float(1.0) / u_xlat5;\n    u_xlat10 = (-u_xlat5) + u_xlat0.x;\n   
            u_xlat5 = unity_OrthoParams.w * u_xlat10 + u_xlat5;\n    u_xlat1.xyz
            = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx
            * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz)
            * vec3(u_xlat5) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat5) * vs_TEXCOORD1.xyz;\n   
            u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n   
            u_xlatb1 = greaterThanEqual(u_xlat0.zzzz, _LightSplitsNear);\n    u_xlat1.x
            = u_xlatb1.x ? float(1.0) : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0)
            : 0.0;\n    u_xlat1.z = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w
            = u_xlatb1.w ? float(1.0) : 0.0;\n;\n    u_xlatb2 = lessThan(u_xlat0.zzzz,
            _LightSplitsFar);\n    u_xlat2.x = u_xlatb2.x ? float(1.0) : 0.0;\n   
            u_xlat2.y = u_xlatb2.y ? float(1.0) : 0.0;\n    u_xlat2.z = u_xlatb2.z
            ? float(1.0) : 0.0;\n    u_xlat2.w = u_xlatb2.w ? float(1.0) : 0.0;\n;\n   
            u_xlat16_1 = u_xlat1 * u_xlat2;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n   
            u_xlat2 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat2;\n   
            u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat2;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat2.xyz
            = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz * u_xlat0.zzz +
            u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz
            * u_xlat0.www + u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat16_1.yyy * u_xlat2.xyz;\n   
            u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx +
            u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz
            * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz
            * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.xxx
            + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx +
            u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz
            * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz
            * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.zzz
            + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx
            + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz
            * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.www
            + u_xlat2.xyz;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n   
            u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat16_4 = (-_LightShadowData.x)
            + 1.0;\n    u_xlat16_4 = (u_xlatb0) ? 0.0 : u_xlat16_4;\n    SV_Target0
            = vec4(u_xlat16_4) + _LightShadowData.xxxx;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          Index: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: ShadowmapFilter
            Value: HardShadow
          - Key: LIGHTMODE
            Value: ALWAYS
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw
            = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy *
            hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz
            * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w
            = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 unity_ShadowSplitSpheres[4];\nuniform
            \tvec4 unity_ShadowSplitSqRadii;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform
            \tmediump vec4 _LightShadowData;\nuniform highp sampler2D _CameraDepthTexture;\nuniform
            highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp
            vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nbvec4 u_xlatb1;\nvec3 u_xlat2;\nmediump vec3
            u_xlat16_3;\nfloat u_xlat4;\nvec3 u_xlat5;\nfloat u_xlat8;\nvoid main()\n{\n   
            u_xlat0.x = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat4
            = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat4 = float(1.0)
            / u_xlat4;\n    u_xlat8 = (-u_xlat4) + u_xlat0.x;\n    u_xlat4 = unity_OrthoParams.w
            * u_xlat8 + u_xlat4;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n   
            u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat4) + u_xlat0.xzw;\n    u_xlat1.xyz
            = vec3(u_xlat4) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www
            * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz
            = u_xlat0.xyz + (-unity_ShadowSplitSpheres[0].xyz);\n    u_xlat1.x =
            dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[1].xyz);\n   
            u_xlat1.y = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz
            + (-unity_ShadowSplitSpheres[2].xyz);\n    u_xlat1.z = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[3].xyz);\n   
            u_xlat1.w = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlatb1 = lessThan(u_xlat1,
            unity_ShadowSplitSqRadii);\n    u_xlat16_3.x = (u_xlatb1.x) ? float(-1.0)
            : float(-0.0);\n    u_xlat16_3.y = (u_xlatb1.y) ? float(-1.0) : float(-0.0);\n   
            u_xlat16_3.z = (u_xlatb1.z) ? float(-1.0) : float(-0.0);\n    u_xlat1.x
            = u_xlatb1.x ? float(1.0) : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0)
            : 0.0;\n    u_xlat1.z = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w
            = u_xlatb1.w ? float(1.0) : 0.0;\n;\n    u_xlat16_3.xyz = u_xlat16_3.xyz
            + u_xlat1.yzw;\n    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0,
            0.0));\n    u_xlat5.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx +
            u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz
            * u_xlat0.zzz + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz
            * u_xlat0.www + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat16_3.xxx * u_xlat5.xyz;\n   
            u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx +
            u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz
            * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz
            * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat1.xxx
            + u_xlat5.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx +
            u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz
            * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz
            * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat16_3.yyy
            + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx
            + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz
            * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.zzz
            + u_xlat1.xyz;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n   
            u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat16_3.x = (-_LightShadowData.x)
            + 1.0;\n    u_xlat16_3.x = (u_xlatb0) ? 0.0 : u_xlat16_3.x;\n    SV_Target0
            = u_xlat16_3.xxxx + _LightShadowData.xxxx;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          Index: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - SHADOWS_SPLIT_SPHERES
          Tags:
          - Key: ShadowmapFilter
            Value: HardShadow
          - Key: LIGHTMODE
            Value: ALWAYS
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw
            = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy *
            hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz
            * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w
            = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform
            \tmediump vec4 _LightShadowData;\nuniform highp sampler2D _CameraDepthTexture;\nuniform
            highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp
            vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nfloat u_xlat3;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0.x = texture2D(_CameraDepthTexture,
            vs_TEXCOORD0.xy).x;\n    u_xlat3 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n   
            u_xlat3 = float(1.0) / u_xlat3;\n    u_xlat6 = (-u_xlat3) + u_xlat0.x;\n   
            u_xlat3 = unity_OrthoParams.w * u_xlat6 + u_xlat3;\n    u_xlat1.xyz =
            (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx
            * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz)
            * vec3(u_xlat3) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat3) * vs_TEXCOORD1.xyz;\n   
            u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz
            = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat16_2 =
            (-_LightShadowData.x) + 1.0;\n    u_xlat16_2 = (u_xlatb0) ? 0.0 : u_xlat16_2;\n   
            SV_Target0 = vec4(u_xlat16_2) + _LightShadowData.xxxx;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          Index: 2
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - SHADOWS_SINGLE_CASCADE
          Tags:
          - Key: ShadowmapFilter
            Value: HardShadow
          - Key: LIGHTMODE
            Value: ALWAYS
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw
            = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy *
            hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz
            * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w
            = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform
            \tmediump vec4 _LightShadowData;\nuniform highp sampler2D _CameraDepthTexture;\nuniform
            highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp
            vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nfloat u_xlat3;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0.x = texture2D(_CameraDepthTexture,
            vs_TEXCOORD0.xy).x;\n    u_xlat3 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n   
            u_xlat3 = float(1.0) / u_xlat3;\n    u_xlat6 = (-u_xlat3) + u_xlat0.x;\n   
            u_xlat3 = unity_OrthoParams.w * u_xlat6 + u_xlat3;\n    u_xlat1.xyz =
            (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx
            * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz)
            * vec3(u_xlat3) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat3) * vs_TEXCOORD1.xyz;\n   
            u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz
            = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat16_2 =
            (-_LightShadowData.x) + 1.0;\n    u_xlat16_2 = (u_xlatb0) ? 0.0 : u_xlat16_2;\n   
            SV_Target0 = vec4(u_xlat16_2) + _LightShadowData.xxxx;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          Index: 3
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - SHADOWS_SINGLE_CASCADE
          - SHADOWS_SPLIT_SPHERES
          Tags:
          - Key: ShadowmapFilter
            Value: HardShadow
          - Key: LIGHTMODE
            Value: ALWAYS
        definedKeywords:
        - SHADOWS_SPLIT_SPHERES
        - SHADOWS_SINGLE_CASCADE
        keywordGroups:
        - Keywords: []
        - Keywords:
          - SHADOWS_SPLIT_SPHERES
        - Keywords:
          - SHADOWS_SINGLE_CASCADE
        - Keywords:
          - SHADOWS_SPLIT_SPHERES
          - SHADOWS_SINGLE_CASCADE
        ContainsInvalidVariant: 0
        HasDepthReader: 1
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: ShadowmapFilter
          Value: HardShadow
        - Key: LIGHTMODE
          Value: ALWAYS
        UsePass: 0
      sourceShader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: ShadowmapFilter
        Value: HardShadow
      UsePass: 0
    - Index: 1
      Passes:
      - ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw
            = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy *
            hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz
            * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w
            = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 _LightSplitsNear;\nuniform
            \tvec4 _LightSplitsFar;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform
            \tmediump vec4 _LightShadowData;\nuniform highp sampler2D _CameraDepthTexture;\nuniform
            highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            vec4 u_xlat16_1;\nbvec4 u_xlatb1;\nvec4 u_xlat2;\nbvec4 u_xlatb2;\nvec3
            u_xlat3;\nmediump float u_xlat16_4;\nvoid main()\n{\n    u_xlat0.z =
            texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat0.xy =
            vs_TEXCOORD0.zw;\n    u_xlat0.xyz = u_xlat0.xyz * vec3(2.0, 2.0, 2.0)
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraInvProjection[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_CameraInvProjection[0] * u_xlat0.xxxx +
            u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraInvProjection[2] * u_xlat0.zzzz
            + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraInvProjection[3];\n   
            u_xlat0.xyz = u_xlat0.xyz / u_xlat0.www;\n    u_xlatb1 = greaterThanEqual((-u_xlat0.zzzz),
            _LightSplitsNear);\n    u_xlat1.x = u_xlatb1.x ? float(1.0) : 0.0;\n   
            u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z = u_xlatb1.z
            ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0) : 0.0;\n;\n   
            u_xlatb2 = lessThan((-u_xlat0.zzzz), _LightSplitsFar);\n    u_xlat2.x
            = u_xlatb2.x ? float(1.0) : 0.0;\n    u_xlat2.y = u_xlatb2.y ? float(1.0)
            : 0.0;\n    u_xlat2.z = u_xlatb2.z ? float(1.0) : 0.0;\n    u_xlat2.w
            = u_xlatb2.w ? float(1.0) : 0.0;\n;\n    u_xlat16_1 = u_xlat1 * u_xlat2;\n   
            u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat2;\n   
            u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * (-u_xlat0.zzzz) + u_xlat2;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat2.xyz
            = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz * u_xlat0.zzz +
            u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz
            * u_xlat0.www + u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat16_1.yyy * u_xlat2.xyz;\n   
            u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx +
            u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz
            * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz
            * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.xxx
            + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx +
            u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz
            * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz
            * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.zzz
            + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx
            + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz
            * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.www
            + u_xlat2.xyz;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n   
            u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat16_4 = (-_LightShadowData.x)
            + 1.0;\n    u_xlat16_4 = (u_xlatb0) ? 0.0 : u_xlat16_4;\n    SV_Target0
            = vec4(u_xlat16_4) + _LightShadowData.xxxx;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          Index: 4
          PassId: 0
          SubShaderIndex: 1
          Keywords: []
          Tags:
          - Key: ShadowmapFilter
            Value: HardShadow_FORCE_INV_PROJECTION_IN_PS
          - Key: LIGHTMODE
            Value: ALWAYS
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw
            = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy *
            hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz
            * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w
            = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 unity_ShadowSplitSpheres[4];\nuniform
            \tvec4 unity_ShadowSplitSqRadii;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform
            \tmediump vec4 _LightShadowData;\nuniform highp sampler2D _CameraDepthTexture;\nuniform
            highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nbvec4
            u_xlatb1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat5;\nvoid
            main()\n{\n    u_xlat0.z = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n   
            u_xlat0.xy = vs_TEXCOORD0.zw;\n    u_xlat0.xyz = u_xlat0.xyz * vec3(2.0,
            2.0, 2.0) + vec3(-1.0, -1.0, -1.0);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraInvProjection[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_CameraInvProjection[0] * u_xlat0.xxxx +
            u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraInvProjection[2] * u_xlat0.zzzz
            + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraInvProjection[3];\n   
            u_xlat0.xyz = u_xlat0.xyz / u_xlat0.www;\n    u_xlat1 = u_xlat0.yyyy
            * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2]
            * (-u_xlat0.zzzz) + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n   
            u_xlat1.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[0].xyz);\n   
            u_xlat1.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat2.xyz = u_xlat0.xyz
            + (-unity_ShadowSplitSpheres[1].xyz);\n    u_xlat1.y = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[2].xyz);\n   
            u_xlat1.z = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz
            + (-unity_ShadowSplitSpheres[3].xyz);\n    u_xlat1.w = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlatb1 = lessThan(u_xlat1, unity_ShadowSplitSqRadii);\n   
            u_xlat16_3.x = (u_xlatb1.x) ? float(-1.0) : float(-0.0);\n    u_xlat16_3.y
            = (u_xlatb1.y) ? float(-1.0) : float(-0.0);\n    u_xlat16_3.z = (u_xlatb1.z)
            ? float(-1.0) : float(-0.0);\n    u_xlat1.x = u_xlatb1.x ? float(1.0)
            : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z
            = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0)
            : 0.0;\n;\n    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat1.yzw;\n    u_xlat16_3.xyz
            = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat5.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[4].xyz
            * u_xlat0.xxx + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz
            * u_xlat0.zzz + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz
            * u_xlat0.www + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat16_3.xxx * u_xlat5.xyz;\n   
            u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx +
            u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz
            * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz
            * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat1.xxx
            + u_xlat5.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx +
            u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz
            * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz
            * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat16_3.yyy
            + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx
            + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz
            * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.zzz
            + u_xlat1.xyz;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n   
            u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat16_3.x = (-_LightShadowData.x)
            + 1.0;\n    u_xlat16_3.x = (u_xlatb0) ? 0.0 : u_xlat16_3.x;\n    SV_Target0
            = u_xlat16_3.xxxx + _LightShadowData.xxxx;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          Index: 5
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - SHADOWS_SPLIT_SPHERES
          Tags:
          - Key: ShadowmapFilter
            Value: HardShadow_FORCE_INV_PROJECTION_IN_PS
          - Key: LIGHTMODE
            Value: ALWAYS
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw
            = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy *
            hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz
            * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w
            = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform
            \tmediump vec4 _LightShadowData;\nuniform highp sampler2D _CameraDepthTexture;\nuniform
            highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nvoid main()\n{\n    u_xlat0.z = texture2D(_CameraDepthTexture,
            vs_TEXCOORD0.xy).x;\n    u_xlat0.xy = vs_TEXCOORD0.zw;\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraInvProjection[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_CameraInvProjection[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_CameraInvProjection[2] * u_xlat0.zzzz +
            u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraInvProjection[3];\n   
            u_xlat0.xyz = u_xlat0.xyz / u_xlat0.www;\n    u_xlat1 = u_xlat0.yyyy
            * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2]
            * (-u_xlat0.zzzz) + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n   
            u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat16_2 =
            (-_LightShadowData.x) + 1.0;\n    u_xlat16_2 = (u_xlatb0) ? 0.0 : u_xlat16_2;\n   
            SV_Target0 = vec4(u_xlat16_2) + _LightShadowData.xxxx;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          Index: 6
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - SHADOWS_SINGLE_CASCADE
          Tags:
          - Key: ShadowmapFilter
            Value: HardShadow_FORCE_INV_PROJECTION_IN_PS
          - Key: LIGHTMODE
            Value: ALWAYS
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw
            = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy *
            hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz
            * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w
            = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform
            \tmediump vec4 _LightShadowData;\nuniform highp sampler2D _CameraDepthTexture;\nuniform
            highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nvoid main()\n{\n    u_xlat0.z = texture2D(_CameraDepthTexture,
            vs_TEXCOORD0.xy).x;\n    u_xlat0.xy = vs_TEXCOORD0.zw;\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraInvProjection[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_CameraInvProjection[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_CameraInvProjection[2] * u_xlat0.zzzz +
            u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraInvProjection[3];\n   
            u_xlat0.xyz = u_xlat0.xyz / u_xlat0.www;\n    u_xlat1 = u_xlat0.yyyy
            * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2]
            * (-u_xlat0.zzzz) + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n   
            u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat16_2 =
            (-_LightShadowData.x) + 1.0;\n    u_xlat16_2 = (u_xlatb0) ? 0.0 : u_xlat16_2;\n   
            SV_Target0 = vec4(u_xlat16_2) + _LightShadowData.xxxx;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          Index: 7
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - SHADOWS_SINGLE_CASCADE
          - SHADOWS_SPLIT_SPHERES
          Tags:
          - Key: ShadowmapFilter
            Value: HardShadow_FORCE_INV_PROJECTION_IN_PS
          - Key: LIGHTMODE
            Value: ALWAYS
        definedKeywords:
        - SHADOWS_SPLIT_SPHERES
        - SHADOWS_SINGLE_CASCADE
        keywordGroups:
        - Keywords: []
        - Keywords:
          - SHADOWS_SPLIT_SPHERES
        - Keywords:
          - SHADOWS_SINGLE_CASCADE
        - Keywords:
          - SHADOWS_SPLIT_SPHERES
          - SHADOWS_SINGLE_CASCADE
        ContainsInvalidVariant: 0
        HasDepthReader: 1
        Id: 0
        SubShaderIndex: 1
        SerializedObjectId: 0
        Tags:
        - Key: ShadowmapFilter
          Value: HardShadow_FORCE_INV_PROJECTION_IN_PS
        - Key: LIGHTMODE
          Value: ALWAYS
        UsePass: 0
      sourceShader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: ShadowmapFilter
        Value: HardShadow_FORCE_INV_PROJECTION_IN_PS
      UsePass: 0
    - Index: 2
      Passes:
      - ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw
            = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy *
            hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz
            * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w
            = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 _LightSplitsNear;\nuniform
            \tvec4 _LightSplitsFar;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform
            \tmediump vec4 _LightShadowData;\nuniform \tvec4 _ShadowMapTexture_TexelSize;\nuniform
            highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            vec4 u_xlat16_1;\nbvec4 u_xlatb1;\nvec4 u_xlat2;\nbvec4 u_xlatb2;\nvec3
            u_xlat3;\nmediump float u_xlat16_4;\nfloat u_xlat5;\nvec2 u_xlat7;\nfloat
            u_xlat10;\nvec2 u_xlat11;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n   
            u_xlat0.x = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat5
            = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat5 = float(1.0)
            / u_xlat5;\n    u_xlat10 = (-u_xlat5) + u_xlat0.x;\n    u_xlat5 = unity_OrthoParams.w
            * u_xlat10 + u_xlat5;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n   
            u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat5) + u_xlat0.xzw;\n    u_xlat1.xyz
            = vec3(u_xlat5) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www
            * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlatb1 = greaterThanEqual(u_xlat0.zzzz,
            _LightSplitsNear);\n    u_xlat1.x = u_xlatb1.x ? float(1.0) : 0.0;\n   
            u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z = u_xlatb1.z
            ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0) : 0.0;\n;\n   
            u_xlatb2 = lessThan(u_xlat0.zzzz, _LightSplitsFar);\n    u_xlat2.x =
            u_xlatb2.x ? float(1.0) : 0.0;\n    u_xlat2.y = u_xlatb2.y ? float(1.0)
            : 0.0;\n    u_xlat2.z = u_xlatb2.z ? float(1.0) : 0.0;\n    u_xlat2.w
            = u_xlatb2.w ? float(1.0) : 0.0;\n;\n    u_xlat16_1 = u_xlat1 * u_xlat2;\n   
            u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat2;\n   
            u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat2;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat2.xyz
            = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz * u_xlat0.zzz +
            u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz
            * u_xlat0.www + u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat16_1.yyy * u_xlat2.xyz;\n   
            u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx +
            u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz
            * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz
            * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.xxx
            + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx +
            u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz
            * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz
            * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.zzz
            + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx
            + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz
            * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.www
            + u_xlat2.xyz;\n    u_xlat1.z = 0.0;\n    u_xlat1.xyw = (-_ShadowMapTexture_TexelSize.xyy);\n   
            u_xlat2 = u_xlat0.xyxy + u_xlat1.zwxy;\n    u_xlat15 = texture2D(_ShadowMapTexture,
            u_xlat2.zw).x;\n    u_xlatb15 = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15)
            ? 0.0 : 1.0;\n    u_xlat2.x = texture2D(_ShadowMapTexture, u_xlat2.xy).x;\n   
            u_xlatb2.x = u_xlat2.x<u_xlat0.z;\n    u_xlat2.x = (u_xlatb2.x) ? 0.0
            : 1.0;\n    u_xlat16_4 = u_xlat15 + u_xlat2.x;\n    u_xlat1 = _ShadowMapTexture_TexelSize.xyxy
            * vec4(1.0, -1.0, -1.0, 1.0) + u_xlat0.xyxy;\n    u_xlat15 = texture2D(_ShadowMapTexture,
            u_xlat1.xy).x;\n    u_xlat2.x = texture2D(_ShadowMapTexture, u_xlat1.zw).x;\n   
            u_xlatb2.x = u_xlat2.x<u_xlat0.z;\n    u_xlat2.x = (u_xlatb2.x) ? 0.0
            : 1.0;\n    u_xlatb15 = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15)
            ? 0.0 : 1.0;\n    u_xlat16_4 = u_xlat15 + u_xlat16_4;\n    u_xlat1.x
            = (-_ShadowMapTexture_TexelSize.x);\n    u_xlat1.y = float(0.0);\n   
            u_xlat11.y = float(0.0);\n    u_xlat7.xy = u_xlat0.xy + u_xlat1.xy;\n   
            u_xlat15 = texture2D(_ShadowMapTexture, u_xlat7.xy).x;\n    u_xlatb15
            = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15) ? 0.0 : 1.0;\n    u_xlat16_4
            = u_xlat15 + u_xlat16_4;\n    u_xlat15 = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb15 = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15)
            ? 0.0 : 1.0;\n    u_xlat16_4 = u_xlat15 + u_xlat16_4;\n    u_xlat11.x
            = _ShadowMapTexture_TexelSize.x;\n    u_xlat7.xy = u_xlat0.xy + u_xlat11.xy;\n   
            u_xlat15 = texture2D(_ShadowMapTexture, u_xlat7.xy).x;\n    u_xlatb15
            = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15) ? 0.0 : 1.0;\n    u_xlat16_4
            = u_xlat15 + u_xlat16_4;\n    u_xlat16_4 = u_xlat2.x + u_xlat16_4;\n   
            u_xlat2.x = 0.0;\n    u_xlat2.y = _ShadowMapTexture_TexelSize.y;\n   
            u_xlat2.xy = u_xlat0.xy + u_xlat2.xy;\n    u_xlat15 = texture2D(_ShadowMapTexture,
            u_xlat2.xy).x;\n    u_xlatb15 = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15)
            ? 0.0 : 1.0;\n    u_xlat16_4 = u_xlat15 + u_xlat16_4;\n    u_xlat0.xy
            = u_xlat0.xy + _ShadowMapTexture_TexelSize.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat0.x =
            (u_xlatb0) ? 0.0 : 1.0;\n    u_xlat16_4 = u_xlat0.x + u_xlat16_4;\n   
            u_xlat16_4 = u_xlat16_4 * 0.111111112;\n    u_xlat0.x = (-_LightShadowData.x)
            + 1.0;\n    u_xlat0 = vec4(u_xlat16_4) * u_xlat0.xxxx + _LightShadowData.xxxx;\n   
            SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          Index: 8
          PassId: 0
          SubShaderIndex: 2
          Keywords: []
          Tags:
          - Key: ShadowmapFilter
            Value: PCF_SOFT
          - Key: LIGHTMODE
            Value: ALWAYS
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw
            = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy *
            hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz
            * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w
            = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 unity_ShadowSplitSpheres[4];\nuniform
            \tvec4 unity_ShadowSplitSqRadii;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform
            \tmediump vec4 _LightShadowData;\nuniform \tvec4 _ShadowMapTexture_TexelSize;\nuniform
            highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nbvec4 u_xlatb1;\nvec3
            u_xlat2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat4;\nvec3 u_xlat5;\nfloat
            u_xlat8;\nvec2 u_xlat10;\nfloat u_xlat12;\nbool u_xlatb12;\nvoid main()\n{\n   
            u_xlat0.x = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat4
            = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat4 = float(1.0)
            / u_xlat4;\n    u_xlat8 = (-u_xlat4) + u_xlat0.x;\n    u_xlat4 = unity_OrthoParams.w
            * u_xlat8 + u_xlat4;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n   
            u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat4) + u_xlat0.xzw;\n    u_xlat1.xyz
            = vec3(u_xlat4) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www
            * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz
            = u_xlat0.xyz + (-unity_ShadowSplitSpheres[0].xyz);\n    u_xlat1.x =
            dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[1].xyz);\n   
            u_xlat1.y = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz
            + (-unity_ShadowSplitSpheres[2].xyz);\n    u_xlat1.z = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[3].xyz);\n   
            u_xlat1.w = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlatb1 = lessThan(u_xlat1,
            unity_ShadowSplitSqRadii);\n    u_xlat16_3.x = (u_xlatb1.x) ? float(-1.0)
            : float(-0.0);\n    u_xlat16_3.y = (u_xlatb1.y) ? float(-1.0) : float(-0.0);\n   
            u_xlat16_3.z = (u_xlatb1.z) ? float(-1.0) : float(-0.0);\n    u_xlat1.x
            = u_xlatb1.x ? float(1.0) : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0)
            : 0.0;\n    u_xlat1.z = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w
            = u_xlatb1.w ? float(1.0) : 0.0;\n;\n    u_xlat16_3.xyz = u_xlat16_3.xyz
            + u_xlat1.yzw;\n    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0,
            0.0));\n    u_xlat5.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx +
            u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz
            * u_xlat0.zzz + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz
            * u_xlat0.www + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat16_3.xxx * u_xlat5.xyz;\n   
            u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx +
            u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz
            * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz
            * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat1.xxx
            + u_xlat5.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx +
            u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz
            * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz
            * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat16_3.yyy
            + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx
            + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz
            * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.zzz
            + u_xlat1.xyz;\n    u_xlat1.z = 0.0;\n    u_xlat1.xyw = (-_ShadowMapTexture_TexelSize.xyy);\n   
            u_xlat1 = u_xlat0.xyxy + u_xlat1;\n    u_xlat12 = texture2D(_ShadowMapTexture,
            u_xlat1.xy).x;\n    u_xlatb12 = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12)
            ? 0.0 : 1.0;\n    u_xlat1.x = texture2D(_ShadowMapTexture, u_xlat1.zw).x;\n   
            u_xlatb1.x = u_xlat1.x<u_xlat0.z;\n    u_xlat1.x = (u_xlatb1.x) ? 0.0
            : 1.0;\n    u_xlat16_3.x = u_xlat12 + u_xlat1.x;\n    u_xlat1 = _ShadowMapTexture_TexelSize.xyxy
            * vec4(1.0, -1.0, -1.0, 1.0) + u_xlat0.xyxy;\n    u_xlat12 = texture2D(_ShadowMapTexture,
            u_xlat1.xy).x;\n    u_xlat1.x = texture2D(_ShadowMapTexture, u_xlat1.zw).x;\n   
            u_xlatb1.x = u_xlat1.x<u_xlat0.z;\n    u_xlat1.x = (u_xlatb1.x) ? 0.0
            : 1.0;\n    u_xlatb12 = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12)
            ? 0.0 : 1.0;\n    u_xlat16_3.x = u_xlat12 + u_xlat16_3.x;\n    u_xlat2.x
            = (-_ShadowMapTexture_TexelSize.x);\n    u_xlat2.y = float(0.0);\n   
            u_xlat10.y = float(0.0);\n    u_xlat5.xy = u_xlat0.xy + u_xlat2.xy;\n   
            u_xlat12 = texture2D(_ShadowMapTexture, u_xlat5.xy).x;\n    u_xlatb12
            = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12) ? 0.0 : 1.0;\n    u_xlat16_3.x
            = u_xlat12 + u_xlat16_3.x;\n    u_xlat12 = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb12 = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12)
            ? 0.0 : 1.0;\n    u_xlat16_3.x = u_xlat12 + u_xlat16_3.x;\n    u_xlat10.x
            = _ShadowMapTexture_TexelSize.x;\n    u_xlat5.xy = u_xlat0.xy + u_xlat10.xy;\n   
            u_xlat12 = texture2D(_ShadowMapTexture, u_xlat5.xy).x;\n    u_xlatb12
            = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12) ? 0.0 : 1.0;\n    u_xlat16_3.x
            = u_xlat12 + u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat1.x + u_xlat16_3.x;\n   
            u_xlat1.x = 0.0;\n    u_xlat1.y = _ShadowMapTexture_TexelSize.y;\n   
            u_xlat1.xy = u_xlat0.xy + u_xlat1.xy;\n    u_xlat12 = texture2D(_ShadowMapTexture,
            u_xlat1.xy).x;\n    u_xlatb12 = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12)
            ? 0.0 : 1.0;\n    u_xlat16_3.x = u_xlat12 + u_xlat16_3.x;\n    u_xlat0.xy
            = u_xlat0.xy + _ShadowMapTexture_TexelSize.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat0.x =
            (u_xlatb0) ? 0.0 : 1.0;\n    u_xlat16_3.x = u_xlat0.x + u_xlat16_3.x;\n   
            u_xlat16_3.x = u_xlat16_3.x * 0.111111112;\n    u_xlat0.x = (-_LightShadowData.x)
            + 1.0;\n    u_xlat0 = u_xlat16_3.xxxx * u_xlat0.xxxx + _LightShadowData.xxxx;\n   
            SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          Index: 9
          PassId: 0
          SubShaderIndex: 2
          Keywords:
          - SHADOWS_SPLIT_SPHERES
          Tags:
          - Key: ShadowmapFilter
            Value: PCF_SOFT
          - Key: LIGHTMODE
            Value: ALWAYS
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw
            = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy *
            hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz
            * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w
            = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform
            \tmediump vec4 _LightShadowData;\nuniform \tvec4 _ShadowMapTexture_TexelSize;\nuniform
            highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nbvec2 u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump
            float u_xlat16_3;\nfloat u_xlat4;\nbool u_xlatb4;\nfloat u_xlat5;\nfloat
            u_xlat9;\nvec2 u_xlat10;\nvoid main()\n{\n    u_xlat0.z = 0.0;\n    u_xlat1.x
            = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat5 = _ZBufferParams.x
            * u_xlat1.x + _ZBufferParams.y;\n    u_xlat5 = float(1.0) / u_xlat5;\n   
            u_xlat9 = (-u_xlat5) + u_xlat1.x;\n    u_xlat5 = unity_OrthoParams.w
            * u_xlat9 + u_xlat5;\n    u_xlat2.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n   
            u_xlat1.xzw = u_xlat1.xxx * u_xlat2.xyz + vs_TEXCOORD2.xyz;\n    u_xlat1.xzw
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat5) + u_xlat1.xzw;\n    u_xlat2.xyz
            = vec3(u_xlat5) * vs_TEXCOORD1.xyz;\n    u_xlat1.xyz = unity_OrthoParams.www
            * u_xlat1.xzw + u_xlat2.xyz;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n   
            u_xlat2 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat1.xxxx + u_xlat2;\n   
            u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat1.zzzz + u_xlat2;\n   
            u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat2.xyz
            = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat1.xxx + u_xlat2.xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat1.zzz +
            u_xlat2.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz
            * u_xlat1.www + u_xlat1.xyz;\n    u_xlat0.xyw = (-_ShadowMapTexture_TexelSize.xyy);\n   
            u_xlat0 = u_xlat0 + u_xlat1.xyxy;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x
            = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat4 = texture2D(_ShadowMapTexture,
            u_xlat0.zw).x;\n    u_xlatb4 = u_xlat4<u_xlat1.z;\n    u_xlat4 = (u_xlatb4)
            ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat4 + u_xlat0.x;\n    u_xlat0 = _ShadowMapTexture_TexelSize.xyxy
            * vec4(1.0, -1.0, -1.0, 1.0) + u_xlat1.xyxy;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlat0.y = texture2D(_ShadowMapTexture, u_xlat0.zw).x;\n   
            u_xlatb0.xy = lessThan(u_xlat0.xyxx, u_xlat1.zzzz).xy;\n    u_xlat0.x
            = (u_xlatb0.x) ? float(0.0) : float(1.0);\n    u_xlat0.y = (u_xlatb0.y)
            ? float(0.0) : float(1.0);\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n   
            u_xlat2.x = (-_ShadowMapTexture_TexelSize.x);\n    u_xlat2.y = float(0.0);\n   
            u_xlat10.y = float(0.0);\n    u_xlat0.xz = u_xlat1.xy + u_xlat2.xy;\n   
            u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlatb0.x
            = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n   
            u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat1.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x
            = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n   
            u_xlat10.x = _ShadowMapTexture_TexelSize.x;\n    u_xlat0.xz = u_xlat1.xy
            + u_xlat10.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n   
            u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0
            : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat16_3 = u_xlat0.y
            + u_xlat16_3;\n    u_xlat0.x = 0.0;\n    u_xlat0.y = _ShadowMapTexture_TexelSize.y;\n   
            u_xlat0.xy = u_xlat0.xy + u_xlat1.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x
            = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n   
            u_xlat0.xy = u_xlat1.xy + _ShadowMapTexture_TexelSize.xy;\n    u_xlat0.x
            = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n   
            u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n   
            u_xlat16_3 = u_xlat16_3 * 0.111111112;\n    u_xlat0.x = (-_LightShadowData.x)
            + 1.0;\n    u_xlat0 = vec4(u_xlat16_3) * u_xlat0.xxxx + _LightShadowData.xxxx;\n   
            SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          Index: 10
          PassId: 0
          SubShaderIndex: 2
          Keywords:
          - SHADOWS_SINGLE_CASCADE
          Tags:
          - Key: ShadowmapFilter
            Value: PCF_SOFT
          - Key: LIGHTMODE
            Value: ALWAYS
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw
            = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy *
            hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz
            * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w
            = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform
            \tmediump vec4 _LightShadowData;\nuniform \tvec4 _ShadowMapTexture_TexelSize;\nuniform
            highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nbvec2 u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump
            float u_xlat16_3;\nfloat u_xlat4;\nbool u_xlatb4;\nfloat u_xlat5;\nfloat
            u_xlat9;\nvec2 u_xlat10;\nvoid main()\n{\n    u_xlat0.z = 0.0;\n    u_xlat1.x
            = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat5 = _ZBufferParams.x
            * u_xlat1.x + _ZBufferParams.y;\n    u_xlat5 = float(1.0) / u_xlat5;\n   
            u_xlat9 = (-u_xlat5) + u_xlat1.x;\n    u_xlat5 = unity_OrthoParams.w
            * u_xlat9 + u_xlat5;\n    u_xlat2.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n   
            u_xlat1.xzw = u_xlat1.xxx * u_xlat2.xyz + vs_TEXCOORD2.xyz;\n    u_xlat1.xzw
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat5) + u_xlat1.xzw;\n    u_xlat2.xyz
            = vec3(u_xlat5) * vs_TEXCOORD1.xyz;\n    u_xlat1.xyz = unity_OrthoParams.www
            * u_xlat1.xzw + u_xlat2.xyz;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n   
            u_xlat2 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat1.xxxx + u_xlat2;\n   
            u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat1.zzzz + u_xlat2;\n   
            u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat2.xyz
            = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat1.xxx + u_xlat2.xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat1.zzz +
            u_xlat2.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz
            * u_xlat1.www + u_xlat1.xyz;\n    u_xlat0.xyw = (-_ShadowMapTexture_TexelSize.xyy);\n   
            u_xlat0 = u_xlat0 + u_xlat1.xyxy;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x
            = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat4 = texture2D(_ShadowMapTexture,
            u_xlat0.zw).x;\n    u_xlatb4 = u_xlat4<u_xlat1.z;\n    u_xlat4 = (u_xlatb4)
            ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat4 + u_xlat0.x;\n    u_xlat0 = _ShadowMapTexture_TexelSize.xyxy
            * vec4(1.0, -1.0, -1.0, 1.0) + u_xlat1.xyxy;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlat0.y = texture2D(_ShadowMapTexture, u_xlat0.zw).x;\n   
            u_xlatb0.xy = lessThan(u_xlat0.xyxx, u_xlat1.zzzz).xy;\n    u_xlat0.x
            = (u_xlatb0.x) ? float(0.0) : float(1.0);\n    u_xlat0.y = (u_xlatb0.y)
            ? float(0.0) : float(1.0);\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n   
            u_xlat2.x = (-_ShadowMapTexture_TexelSize.x);\n    u_xlat2.y = float(0.0);\n   
            u_xlat10.y = float(0.0);\n    u_xlat0.xz = u_xlat1.xy + u_xlat2.xy;\n   
            u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlatb0.x
            = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n   
            u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat1.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x
            = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n   
            u_xlat10.x = _ShadowMapTexture_TexelSize.x;\n    u_xlat0.xz = u_xlat1.xy
            + u_xlat10.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n   
            u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0
            : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat16_3 = u_xlat0.y
            + u_xlat16_3;\n    u_xlat0.x = 0.0;\n    u_xlat0.y = _ShadowMapTexture_TexelSize.y;\n   
            u_xlat0.xy = u_xlat0.xy + u_xlat1.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x
            = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n   
            u_xlat0.xy = u_xlat1.xy + _ShadowMapTexture_TexelSize.xy;\n    u_xlat0.x
            = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n   
            u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n   
            u_xlat16_3 = u_xlat16_3 * 0.111111112;\n    u_xlat0.x = (-_LightShadowData.x)
            + 1.0;\n    u_xlat0 = vec4(u_xlat16_3) * u_xlat0.xxxx + _LightShadowData.xxxx;\n   
            SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          Index: 11
          PassId: 0
          SubShaderIndex: 2
          Keywords:
          - SHADOWS_SINGLE_CASCADE
          - SHADOWS_SPLIT_SPHERES
          Tags:
          - Key: ShadowmapFilter
            Value: PCF_SOFT
          - Key: LIGHTMODE
            Value: ALWAYS
        definedKeywords:
        - SHADOWS_SPLIT_SPHERES
        - SHADOWS_SINGLE_CASCADE
        keywordGroups:
        - Keywords: []
        - Keywords:
          - SHADOWS_SPLIT_SPHERES
        - Keywords:
          - SHADOWS_SINGLE_CASCADE
        - Keywords:
          - SHADOWS_SPLIT_SPHERES
          - SHADOWS_SINGLE_CASCADE
        ContainsInvalidVariant: 0
        HasDepthReader: 1
        Id: 0
        SubShaderIndex: 2
        SerializedObjectId: 0
        Tags:
        - Key: ShadowmapFilter
          Value: PCF_SOFT
        - Key: LIGHTMODE
          Value: ALWAYS
        UsePass: 0
      sourceShader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: ShadowmapFilter
        Value: PCF_SOFT
      UsePass: 0
    - Index: 3
      Passes:
      - ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw
            = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy *
            hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz
            * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w
            = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 _LightSplitsNear;\nuniform
            \tvec4 _LightSplitsFar;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform
            \tmediump vec4 _LightShadowData;\nuniform \tvec4 _ShadowMapTexture_TexelSize;\nuniform
            highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying
            highp vec4 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nbvec4 u_xlatb1;\nvec4
            u_xlat2;\nbvec4 u_xlatb2;\nvec3 u_xlat3;\nmediump float u_xlat16_4;\nvec2
            u_xlat7;\nvec2 u_xlat11;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n   
            u_xlat0.z = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat0.xy
            = vs_TEXCOORD0.zw;\n    u_xlat0.xyz = u_xlat0.xyz * vec3(2.0, 2.0, 2.0)
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraInvProjection[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_CameraInvProjection[0] * u_xlat0.xxxx +
            u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraInvProjection[2] * u_xlat0.zzzz
            + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraInvProjection[3];\n   
            u_xlat0.xyz = u_xlat0.xyz / u_xlat0.www;\n    u_xlatb1 = greaterThanEqual((-u_xlat0.zzzz),
            _LightSplitsNear);\n    u_xlat1.x = u_xlatb1.x ? float(1.0) : 0.0;\n   
            u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z = u_xlatb1.z
            ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0) : 0.0;\n;\n   
            u_xlatb2 = lessThan((-u_xlat0.zzzz), _LightSplitsFar);\n    u_xlat2.x
            = u_xlatb2.x ? float(1.0) : 0.0;\n    u_xlat2.y = u_xlatb2.y ? float(1.0)
            : 0.0;\n    u_xlat2.z = u_xlatb2.z ? float(1.0) : 0.0;\n    u_xlat2.w
            = u_xlatb2.w ? float(1.0) : 0.0;\n;\n    u_xlat16_1 = u_xlat1 * u_xlat2;\n   
            u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat2;\n   
            u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * (-u_xlat0.zzzz) + u_xlat2;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat2.xyz
            = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz * u_xlat0.zzz +
            u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz
            * u_xlat0.www + u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat16_1.yyy * u_xlat2.xyz;\n   
            u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx +
            u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz
            * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz
            * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.xxx
            + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx +
            u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz
            * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz
            * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.zzz
            + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx
            + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz
            * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.www
            + u_xlat2.xyz;\n    u_xlat1.z = 0.0;\n    u_xlat1.xyw = (-_ShadowMapTexture_TexelSize.xyy);\n   
            u_xlat2 = u_xlat0.xyxy + u_xlat1.zwxy;\n    u_xlat15 = texture2D(_ShadowMapTexture,
            u_xlat2.zw).x;\n    u_xlatb15 = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15)
            ? 0.0 : 1.0;\n    u_xlat2.x = texture2D(_ShadowMapTexture, u_xlat2.xy).x;\n   
            u_xlatb2.x = u_xlat2.x<u_xlat0.z;\n    u_xlat2.x = (u_xlatb2.x) ? 0.0
            : 1.0;\n    u_xlat16_4 = u_xlat15 + u_xlat2.x;\n    u_xlat1 = _ShadowMapTexture_TexelSize.xyxy
            * vec4(1.0, -1.0, -1.0, 1.0) + u_xlat0.xyxy;\n    u_xlat15 = texture2D(_ShadowMapTexture,
            u_xlat1.xy).x;\n    u_xlat2.x = texture2D(_ShadowMapTexture, u_xlat1.zw).x;\n   
            u_xlatb2.x = u_xlat2.x<u_xlat0.z;\n    u_xlat2.x = (u_xlatb2.x) ? 0.0
            : 1.0;\n    u_xlatb15 = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15)
            ? 0.0 : 1.0;\n    u_xlat16_4 = u_xlat15 + u_xlat16_4;\n    u_xlat1.x
            = (-_ShadowMapTexture_TexelSize.x);\n    u_xlat1.y = float(0.0);\n   
            u_xlat11.y = float(0.0);\n    u_xlat7.xy = u_xlat0.xy + u_xlat1.xy;\n   
            u_xlat15 = texture2D(_ShadowMapTexture, u_xlat7.xy).x;\n    u_xlatb15
            = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15) ? 0.0 : 1.0;\n    u_xlat16_4
            = u_xlat15 + u_xlat16_4;\n    u_xlat15 = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb15 = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15)
            ? 0.0 : 1.0;\n    u_xlat16_4 = u_xlat15 + u_xlat16_4;\n    u_xlat11.x
            = _ShadowMapTexture_TexelSize.x;\n    u_xlat7.xy = u_xlat0.xy + u_xlat11.xy;\n   
            u_xlat15 = texture2D(_ShadowMapTexture, u_xlat7.xy).x;\n    u_xlatb15
            = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15) ? 0.0 : 1.0;\n    u_xlat16_4
            = u_xlat15 + u_xlat16_4;\n    u_xlat16_4 = u_xlat2.x + u_xlat16_4;\n   
            u_xlat2.x = 0.0;\n    u_xlat2.y = _ShadowMapTexture_TexelSize.y;\n   
            u_xlat2.xy = u_xlat0.xy + u_xlat2.xy;\n    u_xlat15 = texture2D(_ShadowMapTexture,
            u_xlat2.xy).x;\n    u_xlatb15 = u_xlat15<u_xlat0.z;\n    u_xlat15 = (u_xlatb15)
            ? 0.0 : 1.0;\n    u_xlat16_4 = u_xlat15 + u_xlat16_4;\n    u_xlat0.xy
            = u_xlat0.xy + _ShadowMapTexture_TexelSize.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat0.x =
            (u_xlatb0) ? 0.0 : 1.0;\n    u_xlat16_4 = u_xlat0.x + u_xlat16_4;\n   
            u_xlat16_4 = u_xlat16_4 * 0.111111112;\n    u_xlat0.x = (-_LightShadowData.x)
            + 1.0;\n    u_xlat0 = vec4(u_xlat16_4) * u_xlat0.xxxx + _LightShadowData.xxxx;\n   
            SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          Index: 12
          PassId: 0
          SubShaderIndex: 3
          Keywords: []
          Tags:
          - Key: ShadowmapFilter
            Value: PCF_SOFT_FORCE_INV_PROJECTION_IN_PS
          - Key: LIGHTMODE
            Value: ALWAYS
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw
            = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy *
            hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz
            * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w
            = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 unity_ShadowSplitSpheres[4];\nuniform
            \tvec4 unity_ShadowSplitSqRadii;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform
            \tmediump vec4 _LightShadowData;\nuniform \tvec4 _ShadowMapTexture_TexelSize;\nuniform
            highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying
            highp vec4 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nbvec4 u_xlatb1;\nvec3 u_xlat2;\nmediump vec3
            u_xlat16_3;\nvec3 u_xlat5;\nvec2 u_xlat10;\nfloat u_xlat12;\nbool u_xlatb12;\nvoid
            main()\n{\n    u_xlat0.z = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n   
            u_xlat0.xy = vs_TEXCOORD0.zw;\n    u_xlat0.xyz = u_xlat0.xyz * vec3(2.0,
            2.0, 2.0) + vec3(-1.0, -1.0, -1.0);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraInvProjection[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_CameraInvProjection[0] * u_xlat0.xxxx +
            u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraInvProjection[2] * u_xlat0.zzzz
            + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraInvProjection[3];\n   
            u_xlat0.xyz = u_xlat0.xyz / u_xlat0.www;\n    u_xlat1 = u_xlat0.yyyy
            * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2]
            * (-u_xlat0.zzzz) + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n   
            u_xlat1.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[0].xyz);\n   
            u_xlat1.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat2.xyz = u_xlat0.xyz
            + (-unity_ShadowSplitSpheres[1].xyz);\n    u_xlat1.y = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[2].xyz);\n   
            u_xlat1.z = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz
            + (-unity_ShadowSplitSpheres[3].xyz);\n    u_xlat1.w = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlatb1 = lessThan(u_xlat1, unity_ShadowSplitSqRadii);\n   
            u_xlat16_3.x = (u_xlatb1.x) ? float(-1.0) : float(-0.0);\n    u_xlat16_3.y
            = (u_xlatb1.y) ? float(-1.0) : float(-0.0);\n    u_xlat16_3.z = (u_xlatb1.z)
            ? float(-1.0) : float(-0.0);\n    u_xlat1.x = u_xlatb1.x ? float(1.0)
            : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z
            = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0)
            : 0.0;\n;\n    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat1.yzw;\n    u_xlat16_3.xyz
            = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat5.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[4].xyz
            * u_xlat0.xxx + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz
            * u_xlat0.zzz + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz
            * u_xlat0.www + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat16_3.xxx * u_xlat5.xyz;\n   
            u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx +
            u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz
            * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz
            * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat1.xxx
            + u_xlat5.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx +
            u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz
            * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz
            * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat16_3.yyy
            + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx
            + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz
            * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.zzz
            + u_xlat1.xyz;\n    u_xlat1.z = 0.0;\n    u_xlat1.xyw = (-_ShadowMapTexture_TexelSize.xyy);\n   
            u_xlat1 = u_xlat0.xyxy + u_xlat1;\n    u_xlat12 = texture2D(_ShadowMapTexture,
            u_xlat1.xy).x;\n    u_xlatb12 = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12)
            ? 0.0 : 1.0;\n    u_xlat1.x = texture2D(_ShadowMapTexture, u_xlat1.zw).x;\n   
            u_xlatb1.x = u_xlat1.x<u_xlat0.z;\n    u_xlat1.x = (u_xlatb1.x) ? 0.0
            : 1.0;\n    u_xlat16_3.x = u_xlat12 + u_xlat1.x;\n    u_xlat1 = _ShadowMapTexture_TexelSize.xyxy
            * vec4(1.0, -1.0, -1.0, 1.0) + u_xlat0.xyxy;\n    u_xlat12 = texture2D(_ShadowMapTexture,
            u_xlat1.xy).x;\n    u_xlat1.x = texture2D(_ShadowMapTexture, u_xlat1.zw).x;\n   
            u_xlatb1.x = u_xlat1.x<u_xlat0.z;\n    u_xlat1.x = (u_xlatb1.x) ? 0.0
            : 1.0;\n    u_xlatb12 = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12)
            ? 0.0 : 1.0;\n    u_xlat16_3.x = u_xlat12 + u_xlat16_3.x;\n    u_xlat2.x
            = (-_ShadowMapTexture_TexelSize.x);\n    u_xlat2.y = float(0.0);\n   
            u_xlat10.y = float(0.0);\n    u_xlat5.xy = u_xlat0.xy + u_xlat2.xy;\n   
            u_xlat12 = texture2D(_ShadowMapTexture, u_xlat5.xy).x;\n    u_xlatb12
            = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12) ? 0.0 : 1.0;\n    u_xlat16_3.x
            = u_xlat12 + u_xlat16_3.x;\n    u_xlat12 = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb12 = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12)
            ? 0.0 : 1.0;\n    u_xlat16_3.x = u_xlat12 + u_xlat16_3.x;\n    u_xlat10.x
            = _ShadowMapTexture_TexelSize.x;\n    u_xlat5.xy = u_xlat0.xy + u_xlat10.xy;\n   
            u_xlat12 = texture2D(_ShadowMapTexture, u_xlat5.xy).x;\n    u_xlatb12
            = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12) ? 0.0 : 1.0;\n    u_xlat16_3.x
            = u_xlat12 + u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat1.x + u_xlat16_3.x;\n   
            u_xlat1.x = 0.0;\n    u_xlat1.y = _ShadowMapTexture_TexelSize.y;\n   
            u_xlat1.xy = u_xlat0.xy + u_xlat1.xy;\n    u_xlat12 = texture2D(_ShadowMapTexture,
            u_xlat1.xy).x;\n    u_xlatb12 = u_xlat12<u_xlat0.z;\n    u_xlat12 = (u_xlatb12)
            ? 0.0 : 1.0;\n    u_xlat16_3.x = u_xlat12 + u_xlat16_3.x;\n    u_xlat0.xy
            = u_xlat0.xy + _ShadowMapTexture_TexelSize.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat0.x =
            (u_xlatb0) ? 0.0 : 1.0;\n    u_xlat16_3.x = u_xlat0.x + u_xlat16_3.x;\n   
            u_xlat16_3.x = u_xlat16_3.x * 0.111111112;\n    u_xlat0.x = (-_LightShadowData.x)
            + 1.0;\n    u_xlat0 = u_xlat16_3.xxxx * u_xlat0.xxxx + _LightShadowData.xxxx;\n   
            SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          Index: 13
          PassId: 0
          SubShaderIndex: 3
          Keywords:
          - SHADOWS_SPLIT_SPHERES
          Tags:
          - Key: ShadowmapFilter
            Value: PCF_SOFT_FORCE_INV_PROJECTION_IN_PS
          - Key: LIGHTMODE
            Value: ALWAYS
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw
            = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy *
            hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz
            * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w
            = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform
            \tmediump vec4 _LightShadowData;\nuniform \tvec4 _ShadowMapTexture_TexelSize;\nuniform
            highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying
            highp vec4 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec2
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump float u_xlat16_3;\nfloat
            u_xlat4;\nbool u_xlatb4;\nvec2 u_xlat10;\nvoid main()\n{\n    u_xlat0.z
            = 0.0;\n    u_xlat1.z = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n   
            u_xlat1.xy = vs_TEXCOORD0.zw;\n    u_xlat1.xyz = u_xlat1.xyz * vec3(2.0,
            2.0, 2.0) + vec3(-1.0, -1.0, -1.0);\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_CameraInvProjection[1];\n   
            u_xlat2 = hlslcc_mtx4x4unity_CameraInvProjection[0] * u_xlat1.xxxx +
            u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_CameraInvProjection[2] * u_xlat1.zzzz
            + u_xlat2;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_CameraInvProjection[3];\n   
            u_xlat1.xyz = u_xlat1.xyz / u_xlat1.www;\n    u_xlat2 = u_xlat1.yyyy
            * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat2 = hlslcc_mtx4x4unity_CameraToWorld[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[2]
            * (-u_xlat1.zzzz) + u_xlat2;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_CameraToWorld[3];\n   
            u_xlat2.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat1.xxx +
            u_xlat2.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz
            * u_xlat1.zzz + u_xlat2.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz
            * u_xlat1.www + u_xlat1.xyz;\n    u_xlat0.xyw = (-_ShadowMapTexture_TexelSize.xyy);\n   
            u_xlat0 = u_xlat0 + u_xlat1.xyxy;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x
            = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat4 = texture2D(_ShadowMapTexture,
            u_xlat0.zw).x;\n    u_xlatb4 = u_xlat4<u_xlat1.z;\n    u_xlat4 = (u_xlatb4)
            ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat4 + u_xlat0.x;\n    u_xlat0 = _ShadowMapTexture_TexelSize.xyxy
            * vec4(1.0, -1.0, -1.0, 1.0) + u_xlat1.xyxy;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlat0.y = texture2D(_ShadowMapTexture, u_xlat0.zw).x;\n   
            u_xlatb0.xy = lessThan(u_xlat0.xyxx, u_xlat1.zzzz).xy;\n    u_xlat0.x
            = (u_xlatb0.x) ? float(0.0) : float(1.0);\n    u_xlat0.y = (u_xlatb0.y)
            ? float(0.0) : float(1.0);\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n   
            u_xlat2.x = (-_ShadowMapTexture_TexelSize.x);\n    u_xlat2.y = float(0.0);\n   
            u_xlat10.y = float(0.0);\n    u_xlat0.xz = u_xlat1.xy + u_xlat2.xy;\n   
            u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlatb0.x
            = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n   
            u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat1.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x
            = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n   
            u_xlat10.x = _ShadowMapTexture_TexelSize.x;\n    u_xlat0.xz = u_xlat1.xy
            + u_xlat10.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n   
            u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0
            : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat16_3 = u_xlat0.y
            + u_xlat16_3;\n    u_xlat0.x = 0.0;\n    u_xlat0.y = _ShadowMapTexture_TexelSize.y;\n   
            u_xlat0.xy = u_xlat0.xy + u_xlat1.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x
            = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n   
            u_xlat0.xy = u_xlat1.xy + _ShadowMapTexture_TexelSize.xy;\n    u_xlat0.x
            = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n   
            u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n   
            u_xlat16_3 = u_xlat16_3 * 0.111111112;\n    u_xlat0.x = (-_LightShadowData.x)
            + 1.0;\n    u_xlat0 = vec4(u_xlat16_3) * u_xlat0.xxxx + _LightShadowData.xxxx;\n   
            SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          Index: 14
          PassId: 0
          SubShaderIndex: 3
          Keywords:
          - SHADOWS_SINGLE_CASCADE
          Tags:
          - Key: ShadowmapFilter
            Value: PCF_SOFT_FORCE_INV_PROJECTION_IN_PS
          - Key: LIGHTMODE
            Value: ALWAYS
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw
            = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy *
            hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz
            * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n   
            u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n   
            u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w
            = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform
            \tmediump vec4 _LightShadowData;\nuniform \tvec4 _ShadowMapTexture_TexelSize;\nuniform
            highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying
            highp vec4 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec2
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump float u_xlat16_3;\nfloat
            u_xlat4;\nbool u_xlatb4;\nvec2 u_xlat10;\nvoid main()\n{\n    u_xlat0.z
            = 0.0;\n    u_xlat1.z = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n   
            u_xlat1.xy = vs_TEXCOORD0.zw;\n    u_xlat1.xyz = u_xlat1.xyz * vec3(2.0,
            2.0, 2.0) + vec3(-1.0, -1.0, -1.0);\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_CameraInvProjection[1];\n   
            u_xlat2 = hlslcc_mtx4x4unity_CameraInvProjection[0] * u_xlat1.xxxx +
            u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_CameraInvProjection[2] * u_xlat1.zzzz
            + u_xlat2;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_CameraInvProjection[3];\n   
            u_xlat1.xyz = u_xlat1.xyz / u_xlat1.www;\n    u_xlat2 = u_xlat1.yyyy
            * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat2 = hlslcc_mtx4x4unity_CameraToWorld[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[2]
            * (-u_xlat1.zzzz) + u_xlat2;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_CameraToWorld[3];\n   
            u_xlat2.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat1.xxx +
            u_xlat2.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz
            * u_xlat1.zzz + u_xlat2.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz
            * u_xlat1.www + u_xlat1.xyz;\n    u_xlat0.xyw = (-_ShadowMapTexture_TexelSize.xyy);\n   
            u_xlat0 = u_xlat0 + u_xlat1.xyxy;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x
            = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat4 = texture2D(_ShadowMapTexture,
            u_xlat0.zw).x;\n    u_xlatb4 = u_xlat4<u_xlat1.z;\n    u_xlat4 = (u_xlatb4)
            ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat4 + u_xlat0.x;\n    u_xlat0 = _ShadowMapTexture_TexelSize.xyxy
            * vec4(1.0, -1.0, -1.0, 1.0) + u_xlat1.xyxy;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlat0.y = texture2D(_ShadowMapTexture, u_xlat0.zw).x;\n   
            u_xlatb0.xy = lessThan(u_xlat0.xyxx, u_xlat1.zzzz).xy;\n    u_xlat0.x
            = (u_xlatb0.x) ? float(0.0) : float(1.0);\n    u_xlat0.y = (u_xlatb0.y)
            ? float(0.0) : float(1.0);\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n   
            u_xlat2.x = (-_ShadowMapTexture_TexelSize.x);\n    u_xlat2.y = float(0.0);\n   
            u_xlat10.y = float(0.0);\n    u_xlat0.xz = u_xlat1.xy + u_xlat2.xy;\n   
            u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlatb0.x
            = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n   
            u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat1.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x
            = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n   
            u_xlat10.x = _ShadowMapTexture_TexelSize.x;\n    u_xlat0.xz = u_xlat1.xy
            + u_xlat10.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n   
            u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x = (u_xlatb0.x) ? 0.0
            : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n    u_xlat16_3 = u_xlat0.y
            + u_xlat16_3;\n    u_xlat0.x = 0.0;\n    u_xlat0.y = _ShadowMapTexture_TexelSize.y;\n   
            u_xlat0.xy = u_xlat0.xy + u_xlat1.xy;\n    u_xlat0.x = texture2D(_ShadowMapTexture,
            u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n    u_xlat0.x
            = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n   
            u_xlat0.xy = u_xlat1.xy + _ShadowMapTexture_TexelSize.xy;\n    u_xlat0.x
            = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0.x = u_xlat0.x<u_xlat1.z;\n   
            u_xlat0.x = (u_xlatb0.x) ? 0.0 : 1.0;\n    u_xlat16_3 = u_xlat0.x + u_xlat16_3;\n   
            u_xlat16_3 = u_xlat16_3 * 0.111111112;\n    u_xlat0.x = (-_LightShadowData.x)
            + 1.0;\n    u_xlat0 = vec4(u_xlat16_3) * u_xlat0.xxxx + _LightShadowData.xxxx;\n   
            SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          Index: 15
          PassId: 0
          SubShaderIndex: 3
          Keywords:
          - SHADOWS_SINGLE_CASCADE
          - SHADOWS_SPLIT_SPHERES
          Tags:
          - Key: ShadowmapFilter
            Value: PCF_SOFT_FORCE_INV_PROJECTION_IN_PS
          - Key: LIGHTMODE
            Value: ALWAYS
        definedKeywords:
        - SHADOWS_SPLIT_SPHERES
        - SHADOWS_SINGLE_CASCADE
        keywordGroups:
        - Keywords: []
        - Keywords:
          - SHADOWS_SPLIT_SPHERES
        - Keywords:
          - SHADOWS_SINGLE_CASCADE
        - Keywords:
          - SHADOWS_SPLIT_SPHERES
          - SHADOWS_SINGLE_CASCADE
        ContainsInvalidVariant: 0
        HasDepthReader: 1
        Id: 0
        SubShaderIndex: 3
        SerializedObjectId: 0
        Tags:
        - Key: ShadowmapFilter
          Value: PCF_SOFT_FORCE_INV_PROJECTION_IN_PS
        - Key: LIGHTMODE
          Value: ALWAYS
        UsePass: 0
      sourceShader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: ShadowmapFilter
        Value: PCF_SOFT_FORCE_INV_PROJECTION_IN_PS
      UsePass: 0
    Shader: {fileID: 64, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - SHADOWS_SPLIT_SPHERES
    - SHADOWS_SINGLE_CASCADE
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\n#define SV_Target0 gl_FragData[0]\nvoid main()\n{\n    SV_Target0
            = vec4(1.0, 0.0, 1.0, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: ALWAYS
        definedKeywords:
        - _
        - UNITY_SINGLE_PASS_STEREO
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        keywordGroups:
        - Keywords:
          - _
          - UNITY_SINGLE_PASS_STEREO
          - STEREO_INSTANCING_ON
          - STEREO_MULTIVIEW_ON
        ContainsInvalidVariant: 0
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: ALWAYS
        UsePass: 0
      sourceShader: {fileID: 4800000, guid: e6e9a19c3678ded42a3bc431ebef7dbd, type: 3}
      Tags: []
      UsePass: 0
    Shader: {fileID: 4800000, guid: e6e9a19c3678ded42a3bc431ebef7dbd, type: 3}
    ShaderPath: Packages/com.unity.render-pipelines.universal/Shaders/Utils/FallbackError.shader
    ShaderDefinedKeywords:
    - _
    - UNITY_SINGLE_PASS_STEREO
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform
            \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nattribute
            highp vec4 in_POSITION0;\nvarying mediump float vs_TEXCOORD0;\nvarying
            mediump vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\nvec4
            u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4
            u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_4;\nvec4
            u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat8;\nvec3
            u_xlat13;\nfloat u_xlat16;\nfloat u_xlat21;\nfloat u_xlat24;\nfloat u_xlat25;\nfloat
            u_xlat26;\nmediump float u_xlat16_27;\nfloat u_xlat28;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat1.xyz = (-_SkyTint.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.300000012, 0.300000042,
            0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat1.xyz
            = u_xlat1.xyz * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat1.xyz;\n   
            u_xlat1.xyz = vec3(1.0, 1.0, 1.0) / u_xlat1.xyz;\n    u_xlat16_3.x =
            log2(_AtmosphereThickness);\n    u_xlat16_3.x = u_xlat16_3.x * 2.5;\n   
            u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_3.xy = u_xlat16_3.xx
            * vec2(0.049999997, 0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.xyz = vec3(u_xlat24) *
            u_xlat0.xyz;\n    u_xlatb0 = u_xlat2.y>=0.0;\n    if(u_xlatb0){\n       
            u_xlat0.x = u_xlat2.y * u_xlat2.y + 0.0506249666;\n        u_xlat0.x
            = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n       
            u_xlat8 = (-u_xlat0.y) * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8
            * 5.25 + -6.80000019;\n        u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n       
            u_xlat16 = u_xlat8 * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8
            * u_xlat16 + -0.00286999997;\n        u_xlat8 = u_xlat8 * 1.44269502;\n       
            u_xlat0.y = exp2(u_xlat8);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5,
            0.246031836, 20.0);\n        u_xlat4.xyz = u_xlat0.xxx * u_xlat2.xyz;\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002,
            0.0);\n        u_xlat24 = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat24
            = sqrt(u_xlat24);\n        u_xlat25 = (-u_xlat24) + 1.0;\n        u_xlat25
            = u_xlat25 * 230.831207;\n        u_xlat25 = exp2(u_xlat25);\n       
            u_xlat26 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);\n        u_xlat26
            = u_xlat26 / u_xlat24;\n        u_xlat28 = dot(u_xlat2.xyz, u_xlat4.xyz);\n       
            u_xlat24 = u_xlat28 / u_xlat24;\n        u_xlat26 = (-u_xlat26) + 1.0;\n       
            u_xlat28 = u_xlat26 * 5.25 + -6.80000019;\n        u_xlat28 = u_xlat26
            * u_xlat28 + 3.82999992;\n        u_xlat28 = u_xlat26 * u_xlat28 + 0.458999991;\n       
            u_xlat26 = u_xlat26 * u_xlat28 + -0.00286999997;\n        u_xlat26 =
            u_xlat26 * 1.44269502;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat24
            = (-u_xlat24) + 1.0;\n        u_xlat28 = u_xlat24 * 5.25 + -6.80000019;\n       
            u_xlat28 = u_xlat24 * u_xlat28 + 3.82999992;\n        u_xlat28 = u_xlat24
            * u_xlat28 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat28 + -0.00286999997;\n       
            u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n       
            u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat26 * 0.25 + (-u_xlat24);\n       
            u_xlat24 = u_xlat25 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24,
            0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat5.xyz =
            u_xlat1.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat6.xyz = (-vec3(u_xlat24)) * u_xlat5.xyz;\n        u_xlat6.xyz =
            u_xlat6.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat6.xyz
            = exp2(u_xlat6.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat25;\n       
            u_xlat4.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat4.xyz;\n        u_xlat0.x
            = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat25 = (-u_xlat0.x) + 1.0;\n        u_xlat25 = u_xlat25 * 230.831207;\n       
            u_xlat25 = exp2(u_xlat25);\n        u_xlat26 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n        u_xlat26 = u_xlat26 / u_xlat0.x;\n        u_xlat4.x
            = dot(u_xlat2.xyz, u_xlat4.xyz);\n        u_xlat0.x = u_xlat4.x / u_xlat0.x;\n       
            u_xlat26 = (-u_xlat26) + 1.0;\n        u_xlat4.x = u_xlat26 * 5.25 +
            -6.80000019;\n        u_xlat4.x = u_xlat26 * u_xlat4.x + 3.82999992;\n       
            u_xlat4.x = u_xlat26 * u_xlat4.x + 0.458999991;\n        u_xlat26 = u_xlat26
            * u_xlat4.x + -0.00286999997;\n        u_xlat26 = u_xlat26 * 1.44269502;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat4.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat4.x = u_xlat0.x
            * u_xlat4.x + 3.82999992;\n        u_xlat4.x = u_xlat0.x * u_xlat4.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat4.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat26 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat25 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat4.xyz = u_xlat5.xyz * (-u_xlat0.xxx);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat4.xyz = exp2(u_xlat4.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat25;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat0.xyz = u_xlat6.xyz
            * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat4.xyz = u_xlat1.xyz *
            u_xlat16_3.xxx;\n        u_xlat4.xyz = u_xlat0.xyz * u_xlat4.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_4.xyz = u_xlat4.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat26 = min(u_xlat2.y, -0.00100000005);\n       
            u_xlat26 = -9.99999975e-05 / u_xlat26;\n        u_xlat5.xyz = vec3(u_xlat26)
            * u_xlat2.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat5.w = dot((-u_xlat2.xyz),
            u_xlat5.xyz);\n        u_xlat5.x = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n       
            u_xlat5.xy = (-u_xlat5.xw) + vec2(1.0, 1.0);\n        u_xlat21 = u_xlat5.y
            * 5.25 + -6.80000019;\n        u_xlat21 = u_xlat5.y * u_xlat21 + 3.82999992;\n       
            u_xlat21 = u_xlat5.y * u_xlat21 + 0.458999991;\n        u_xlat13.x =
            u_xlat5.y * u_xlat21 + -0.00286999997;\n        u_xlat13.x = u_xlat13.x
            * 1.44269502;\n        u_xlat5.y = exp2(u_xlat13.x);\n        u_xlat21
            = u_xlat5.x * 5.25 + -6.80000019;\n        u_xlat21 = u_xlat5.x * u_xlat21
            + 3.82999992;\n        u_xlat21 = u_xlat5.x * u_xlat21 + 0.458999991;\n       
            u_xlat5.x = u_xlat5.x * u_xlat21 + -0.00286999997;\n        u_xlat5.xyz
            = u_xlat5.xyy * vec3(1.44269502, 0.25, 0.249900013);\n        u_xlat5.x
            = exp2(u_xlat5.x);\n        u_xlat5.x = u_xlat5.x * 0.25 + u_xlat5.y;\n       
            u_xlat13.xz = vec2(u_xlat26) * vec2(0.5, 20.0);\n        u_xlat6.xyz
            = u_xlat2.xyz * u_xlat13.xxx;\n        u_xlat6.xyz = u_xlat6.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat26 = dot(u_xlat6.xyz,
            u_xlat6.xyz);\n        u_xlat26 = sqrt(u_xlat26);\n        u_xlat26 =
            (-u_xlat26) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat5.x = u_xlat26 * u_xlat5.x
            + (-u_xlat5.z);\n        u_xlat5.x = max(u_xlat5.x, 0.0);\n        u_xlat5.x
            = min(u_xlat5.x, 50.0);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat5.xyz
            = (-u_xlat5.xxx) * u_xlat6.xyz;\n        u_xlat5.xyz = u_xlat5.xyz *
            vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat5.xyz);\n       
            u_xlat26 = u_xlat13.z * u_xlat26;\n        u_xlat5.xyz = u_xlat0.xyz
            * vec3(u_xlat26);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.xxx
            + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat4.xyz
            = u_xlat5.xyz * u_xlat6.xyz;\n        u_xlat16_4.xyz = u_xlat4.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat26 = u_xlat2.y * -50.0;\n   
            u_xlat16_3.xyz = vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z)
            * vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z);\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_27 = dot(_WorldSpaceLightPos0.xyz,
            (-u_xlat2.xyz));\n    u_xlat16_27 = u_xlat16_27 * u_xlat16_27;\n    u_xlat16_27
            = u_xlat16_27 * 0.75 + 0.75;\n    u_xlat16_7.xyz = vec3(u_xlat16_27)
            * u_xlat16_4.xyz;\n    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Exposure);\n   
            vs_TEXCOORD1.xyz = sqrt(u_xlat16_3.xyz);\n    vs_TEXCOORD2.xyz = sqrt(u_xlat16_7.xyz);\n   
            vs_TEXCOORD0 = u_xlat26;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nvarying mediump float vs_TEXCOORD0;\nvarying mediump vec3
            vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\n#define SV_Target0
            gl_FragData[0]\nmediump float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat16_0 = vs_TEXCOORD0;\n    u_xlat16_0 = clamp(u_xlat16_0,
            0.0, 1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n   
            SV_Target0.xyz = vec3(u_xlat16_0) * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_NONE
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
          - Key: LIGHTMODE
            Value: ALWAYS
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump float _Exposure;\nuniform
            \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform
            \tmediump float _AtmosphereThickness;\nattribute highp vec4 in_POSITION0;\nvarying
            mediump vec3 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying
            mediump vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\nvec4
            u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4
            u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_4;\nvec4
            u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nfloat
            u_xlat9;\nvec3 u_xlat14;\nfloat u_xlat18;\nfloat u_xlat23;\nfloat u_xlat27;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_30;\nfloat u_xlat31;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat1.xyz = (-_SkyTint.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.300000012, 0.300000042,
            0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat1.xyz
            = u_xlat1.xyz * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat1.xyz;\n   
            u_xlat1.xyz = vec3(1.0, 1.0, 1.0) / u_xlat1.xyz;\n    u_xlat16_3.x =
            log2(_AtmosphereThickness);\n    u_xlat16_3.x = u_xlat16_3.x * 2.5;\n   
            u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_3.xy = u_xlat16_3.xx
            * vec2(0.049999997, 0.0314159282);\n    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat2.xyz = vec3(u_xlat27) *
            u_xlat0.xyz;\n    u_xlatb0 = u_xlat2.y>=0.0;\n    if(u_xlatb0){\n       
            u_xlat0.x = u_xlat2.y * u_xlat2.y + 0.0506249666;\n        u_xlat0.x
            = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat27 + u_xlat0.x;\n       
            u_xlat9 = (-u_xlat0.y) * u_xlat27 + 1.0;\n        u_xlat18 = u_xlat9
            * 5.25 + -6.80000019;\n        u_xlat18 = u_xlat9 * u_xlat18 + 3.82999992;\n       
            u_xlat18 = u_xlat9 * u_xlat18 + 0.458999991;\n        u_xlat9 = u_xlat9
            * u_xlat18 + -0.00286999997;\n        u_xlat9 = u_xlat9 * 1.44269502;\n       
            u_xlat0.y = exp2(u_xlat9);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5,
            0.246031836, 20.0);\n        u_xlat4.xyz = u_xlat0.xxx * u_xlat2.xyz;\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002,
            0.0);\n        u_xlat27 = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat27
            = sqrt(u_xlat27);\n        u_xlat28 = (-u_xlat27) + 1.0;\n        u_xlat28
            = u_xlat28 * 230.831207;\n        u_xlat28 = exp2(u_xlat28);\n       
            u_xlat29 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);\n        u_xlat29
            = u_xlat29 / u_xlat27;\n        u_xlat31 = dot(u_xlat2.xyz, u_xlat4.xyz);\n       
            u_xlat27 = u_xlat31 / u_xlat27;\n        u_xlat29 = (-u_xlat29) + 1.0;\n       
            u_xlat31 = u_xlat29 * 5.25 + -6.80000019;\n        u_xlat31 = u_xlat29
            * u_xlat31 + 3.82999992;\n        u_xlat31 = u_xlat29 * u_xlat31 + 0.458999991;\n       
            u_xlat29 = u_xlat29 * u_xlat31 + -0.00286999997;\n        u_xlat29 =
            u_xlat29 * 1.44269502;\n        u_xlat29 = exp2(u_xlat29);\n        u_xlat27
            = (-u_xlat27) + 1.0;\n        u_xlat31 = u_xlat27 * 5.25 + -6.80000019;\n       
            u_xlat31 = u_xlat27 * u_xlat31 + 3.82999992;\n        u_xlat31 = u_xlat27
            * u_xlat31 + 0.458999991;\n        u_xlat27 = u_xlat27 * u_xlat31 + -0.00286999997;\n       
            u_xlat27 = u_xlat27 * 1.44269502;\n        u_xlat27 = exp2(u_xlat27);\n       
            u_xlat27 = u_xlat27 * 0.25;\n        u_xlat27 = u_xlat29 * 0.25 + (-u_xlat27);\n       
            u_xlat27 = u_xlat28 * u_xlat27 + u_xlat0.y;\n        u_xlat27 = max(u_xlat27,
            0.0);\n        u_xlat27 = min(u_xlat27, 50.0);\n        u_xlat5.xyz =
            u_xlat1.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat6.xyz = (-vec3(u_xlat27)) * u_xlat5.xyz;\n        u_xlat6.xyz =
            u_xlat6.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat6.xyz
            = exp2(u_xlat6.xyz);\n        u_xlat27 = u_xlat0.z * u_xlat28;\n       
            u_xlat4.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat4.xyz;\n        u_xlat0.x
            = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat28 = (-u_xlat0.x) + 1.0;\n        u_xlat28 = u_xlat28 * 230.831207;\n       
            u_xlat28 = exp2(u_xlat28);\n        u_xlat29 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n        u_xlat29 = u_xlat29 / u_xlat0.x;\n        u_xlat4.x
            = dot(u_xlat2.xyz, u_xlat4.xyz);\n        u_xlat0.x = u_xlat4.x / u_xlat0.x;\n       
            u_xlat29 = (-u_xlat29) + 1.0;\n        u_xlat4.x = u_xlat29 * 5.25 +
            -6.80000019;\n        u_xlat4.x = u_xlat29 * u_xlat4.x + 3.82999992;\n       
            u_xlat4.x = u_xlat29 * u_xlat4.x + 0.458999991;\n        u_xlat29 = u_xlat29
            * u_xlat4.x + -0.00286999997;\n        u_xlat29 = u_xlat29 * 1.44269502;\n       
            u_xlat29 = exp2(u_xlat29);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat4.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat4.x = u_xlat0.x
            * u_xlat4.x + 3.82999992;\n        u_xlat4.x = u_xlat0.x * u_xlat4.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat4.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat29 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat28 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat4.xyz = u_xlat5.xyz * (-u_xlat0.xxx);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat4.xyz = exp2(u_xlat4.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat28;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat0.xyz = u_xlat6.xyz
            * vec3(u_xlat27) + u_xlat0.xyz;\n        u_xlat4.xyz = u_xlat1.xyz *
            u_xlat16_3.xxx;\n        u_xlat4.xyz = u_xlat0.xyz * u_xlat4.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_4.xyz = u_xlat4.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat29 = min(u_xlat2.y, -0.00100000005);\n       
            u_xlat29 = -9.99999975e-05 / u_xlat29;\n        u_xlat5.xyz = vec3(u_xlat29)
            * u_xlat2.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat5.w = dot((-u_xlat2.xyz),
            u_xlat5.xyz);\n        u_xlat5.x = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n       
            u_xlat5.xy = (-u_xlat5.xw) + vec2(1.0, 1.0);\n        u_xlat23 = u_xlat5.y
            * 5.25 + -6.80000019;\n        u_xlat23 = u_xlat5.y * u_xlat23 + 3.82999992;\n       
            u_xlat23 = u_xlat5.y * u_xlat23 + 0.458999991;\n        u_xlat14.x =
            u_xlat5.y * u_xlat23 + -0.00286999997;\n        u_xlat14.x = u_xlat14.x
            * 1.44269502;\n        u_xlat5.y = exp2(u_xlat14.x);\n        u_xlat23
            = u_xlat5.x * 5.25 + -6.80000019;\n        u_xlat23 = u_xlat5.x * u_xlat23
            + 3.82999992;\n        u_xlat23 = u_xlat5.x * u_xlat23 + 0.458999991;\n       
            u_xlat5.x = u_xlat5.x * u_xlat23 + -0.00286999997;\n        u_xlat5.xyz
            = u_xlat5.xyy * vec3(1.44269502, 0.25, 0.249900013);\n        u_xlat5.x
            = exp2(u_xlat5.x);\n        u_xlat5.x = u_xlat5.x * 0.25 + u_xlat5.y;\n       
            u_xlat14.xz = vec2(u_xlat29) * vec2(0.5, 20.0);\n        u_xlat6.xyz
            = u_xlat2.xyz * u_xlat14.xxx;\n        u_xlat6.xyz = u_xlat6.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat29 = dot(u_xlat6.xyz,
            u_xlat6.xyz);\n        u_xlat29 = sqrt(u_xlat29);\n        u_xlat29 =
            (-u_xlat29) + 1.0;\n        u_xlat29 = u_xlat29 * 230.831207;\n       
            u_xlat29 = exp2(u_xlat29);\n        u_xlat5.x = u_xlat29 * u_xlat5.x
            + (-u_xlat5.z);\n        u_xlat5.x = max(u_xlat5.x, 0.0);\n        u_xlat5.x
            = min(u_xlat5.x, 50.0);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat5.xyz
            = (-u_xlat5.xxx) * u_xlat6.xyz;\n        u_xlat5.xyz = u_xlat5.xyz *
            vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat5.xyz);\n       
            u_xlat29 = u_xlat14.z * u_xlat29;\n        u_xlat5.xyz = u_xlat0.xyz
            * vec3(u_xlat29);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.xxx
            + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat4.xyz
            = u_xlat5.xyz * u_xlat6.xyz;\n        u_xlat16_4.xyz = u_xlat4.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat16_3.xyz = vec3(_GroundColor.x,
            _GroundColor.y, _GroundColor.z) * vec3(_GroundColor.x, _GroundColor.y,
            _GroundColor.z);\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz
            + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n   
            u_xlat16_30 = dot(_WorldSpaceLightPos0.xyz, (-u_xlat2.xyz));\n    u_xlat16_30
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_30 = u_xlat16_30 * 0.75 +
            0.75;\n    u_xlat16_7.xyz = vec3(u_xlat16_30) * u_xlat16_4.xyz;\n   
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Exposure);\n    u_xlat16_30 =
            dot(_LightColor0.xyz, _LightColor0.xyz);\n    u_xlat16_30 = sqrt(u_xlat16_30);\n   
            u_xlat16_30 = max(u_xlat16_30, 0.25);\n    u_xlat16_30 = min(u_xlat16_30,
            1.0);\n    u_xlat16_8.xyz = u_xlat16_0.xyz * vec3(8000.0, 8000.0, 8000.0);\n   
            u_xlat16_8.xyz = clamp(u_xlat16_8.xyz, 0.0, 1.0);\n    u_xlat16_8.xyz
            = u_xlat16_8.xyz * _LightColor0.xyz;\n    u_xlat16_8.xyz = u_xlat16_8.xyz
            * vec3(27.0, 27.0, 27.0);\n    u_xlat16_8.xyz = u_xlat16_8.xyz / vec3(u_xlat16_30);\n   
            vs_TEXCOORD1.xyz = sqrt(u_xlat16_3.xyz);\n    vs_TEXCOORD2.xyz = sqrt(u_xlat16_7.xyz);\n   
            vs_TEXCOORD3.xyz = sqrt(u_xlat16_8.xyz);\n    vs_TEXCOORD0.xyz = (-u_xlat2.xyz);\n   
            return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tmediump float
            _SunSize;\nvarying mediump vec3 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying
            mediump vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\n#define
            SV_Target0 gl_FragData[0]\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nbool
            u_xlatb2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n    u_xlat16_0.xyz
            = vs_TEXCOORD0.xyz + _WorldSpaceLightPos0.xyz;\n    u_xlat16_0.x = dot(u_xlat16_0.xyz,
            u_xlat16_0.xyz);\n    u_xlat16_0.x = sqrt(u_xlat16_0.x);\n    u_xlat16_3.x
            = float(1.0) / _SunSize;\n    u_xlat16_0.x = u_xlat16_3.x * u_xlat16_0.x;\n   
            u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);\n    u_xlat16_3.x = u_xlat16_0.x
            * -2.0 + 3.0;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;\n    u_xlat16_0.x
            = (-u_xlat16_3.x) * u_xlat16_0.x + 1.0;\n    u_xlat16_0.x = u_xlat16_0.x
            * u_xlat16_0.x;\n    u_xlat16_3.x = vs_TEXCOORD0.y * 50.0;\n    u_xlat16_3.x
            = clamp(u_xlat16_3.x, 0.0, 1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz
            + (-vs_TEXCOORD2.xyz);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_1.xyz
            + vs_TEXCOORD2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD3.xyz * u_xlat16_0.xxx
            + u_xlat16_3.xyz;\n    u_xlatb2 = vs_TEXCOORD0.y<0.0;\n    SV_Target0.xyz
            = (bool(u_xlatb2)) ? u_xlat16_1.xyz : u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_SIMPLE
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
          - Key: LIGHTMODE
            Value: ALWAYS
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump float _Exposure;\nuniform
            \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform
            \tmediump float _AtmosphereThickness;\nattribute highp vec4 in_POSITION0;\nvarying
            highp vec3 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying
            mediump vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\nvec4
            u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4
            u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_4;\nvec4
            u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nfloat
            u_xlat9;\nvec3 u_xlat14;\nfloat u_xlat18;\nfloat u_xlat23;\nfloat u_xlat27;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_30;\nfloat u_xlat31;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat1.xyz = (-_SkyTint.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.300000012, 0.300000042,
            0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat1.xyz
            = u_xlat1.xyz * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat1.xyz;\n   
            u_xlat1.xyz = vec3(1.0, 1.0, 1.0) / u_xlat1.xyz;\n    u_xlat16_3.x =
            log2(_AtmosphereThickness);\n    u_xlat16_3.x = u_xlat16_3.x * 2.5;\n   
            u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_3.xy = u_xlat16_3.xx
            * vec2(0.049999997, 0.0314159282);\n    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat2.xyz = vec3(u_xlat27) *
            u_xlat0.xyz;\n    u_xlatb0 = u_xlat2.y>=0.0;\n    if(u_xlatb0){\n       
            u_xlat0.x = u_xlat2.y * u_xlat2.y + 0.0506249666;\n        u_xlat0.x
            = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat27 + u_xlat0.x;\n       
            u_xlat9 = (-u_xlat0.y) * u_xlat27 + 1.0;\n        u_xlat18 = u_xlat9
            * 5.25 + -6.80000019;\n        u_xlat18 = u_xlat9 * u_xlat18 + 3.82999992;\n       
            u_xlat18 = u_xlat9 * u_xlat18 + 0.458999991;\n        u_xlat9 = u_xlat9
            * u_xlat18 + -0.00286999997;\n        u_xlat9 = u_xlat9 * 1.44269502;\n       
            u_xlat0.y = exp2(u_xlat9);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5,
            0.246031836, 20.0);\n        u_xlat4.xyz = u_xlat0.xxx * u_xlat2.xyz;\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002,
            0.0);\n        u_xlat27 = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat27
            = sqrt(u_xlat27);\n        u_xlat28 = (-u_xlat27) + 1.0;\n        u_xlat28
            = u_xlat28 * 230.831207;\n        u_xlat28 = exp2(u_xlat28);\n       
            u_xlat29 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);\n        u_xlat29
            = u_xlat29 / u_xlat27;\n        u_xlat31 = dot(u_xlat2.xyz, u_xlat4.xyz);\n       
            u_xlat27 = u_xlat31 / u_xlat27;\n        u_xlat29 = (-u_xlat29) + 1.0;\n       
            u_xlat31 = u_xlat29 * 5.25 + -6.80000019;\n        u_xlat31 = u_xlat29
            * u_xlat31 + 3.82999992;\n        u_xlat31 = u_xlat29 * u_xlat31 + 0.458999991;\n       
            u_xlat29 = u_xlat29 * u_xlat31 + -0.00286999997;\n        u_xlat29 =
            u_xlat29 * 1.44269502;\n        u_xlat29 = exp2(u_xlat29);\n        u_xlat27
            = (-u_xlat27) + 1.0;\n        u_xlat31 = u_xlat27 * 5.25 + -6.80000019;\n       
            u_xlat31 = u_xlat27 * u_xlat31 + 3.82999992;\n        u_xlat31 = u_xlat27
            * u_xlat31 + 0.458999991;\n        u_xlat27 = u_xlat27 * u_xlat31 + -0.00286999997;\n       
            u_xlat27 = u_xlat27 * 1.44269502;\n        u_xlat27 = exp2(u_xlat27);\n       
            u_xlat27 = u_xlat27 * 0.25;\n        u_xlat27 = u_xlat29 * 0.25 + (-u_xlat27);\n       
            u_xlat27 = u_xlat28 * u_xlat27 + u_xlat0.y;\n        u_xlat27 = max(u_xlat27,
            0.0);\n        u_xlat27 = min(u_xlat27, 50.0);\n        u_xlat5.xyz =
            u_xlat1.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat6.xyz = (-vec3(u_xlat27)) * u_xlat5.xyz;\n        u_xlat6.xyz =
            u_xlat6.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat6.xyz
            = exp2(u_xlat6.xyz);\n        u_xlat27 = u_xlat0.z * u_xlat28;\n       
            u_xlat4.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat4.xyz;\n        u_xlat0.x
            = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat28 = (-u_xlat0.x) + 1.0;\n        u_xlat28 = u_xlat28 * 230.831207;\n       
            u_xlat28 = exp2(u_xlat28);\n        u_xlat29 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n        u_xlat29 = u_xlat29 / u_xlat0.x;\n        u_xlat4.x
            = dot(u_xlat2.xyz, u_xlat4.xyz);\n        u_xlat0.x = u_xlat4.x / u_xlat0.x;\n       
            u_xlat29 = (-u_xlat29) + 1.0;\n        u_xlat4.x = u_xlat29 * 5.25 +
            -6.80000019;\n        u_xlat4.x = u_xlat29 * u_xlat4.x + 3.82999992;\n       
            u_xlat4.x = u_xlat29 * u_xlat4.x + 0.458999991;\n        u_xlat29 = u_xlat29
            * u_xlat4.x + -0.00286999997;\n        u_xlat29 = u_xlat29 * 1.44269502;\n       
            u_xlat29 = exp2(u_xlat29);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat4.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat4.x = u_xlat0.x
            * u_xlat4.x + 3.82999992;\n        u_xlat4.x = u_xlat0.x * u_xlat4.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat4.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat29 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat28 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat4.xyz = u_xlat5.xyz * (-u_xlat0.xxx);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat4.xyz = exp2(u_xlat4.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat28;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat0.xyz = u_xlat6.xyz
            * vec3(u_xlat27) + u_xlat0.xyz;\n        u_xlat4.xyz = u_xlat1.xyz *
            u_xlat16_3.xxx;\n        u_xlat4.xyz = u_xlat0.xyz * u_xlat4.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_4.xyz = u_xlat4.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat29 = min(u_xlat2.y, -0.00100000005);\n       
            u_xlat29 = -9.99999975e-05 / u_xlat29;\n        u_xlat5.xyz = vec3(u_xlat29)
            * u_xlat2.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat5.w = dot((-u_xlat2.xyz),
            u_xlat5.xyz);\n        u_xlat5.x = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n       
            u_xlat5.xy = (-u_xlat5.xw) + vec2(1.0, 1.0);\n        u_xlat23 = u_xlat5.y
            * 5.25 + -6.80000019;\n        u_xlat23 = u_xlat5.y * u_xlat23 + 3.82999992;\n       
            u_xlat23 = u_xlat5.y * u_xlat23 + 0.458999991;\n        u_xlat14.x =
            u_xlat5.y * u_xlat23 + -0.00286999997;\n        u_xlat14.x = u_xlat14.x
            * 1.44269502;\n        u_xlat5.y = exp2(u_xlat14.x);\n        u_xlat23
            = u_xlat5.x * 5.25 + -6.80000019;\n        u_xlat23 = u_xlat5.x * u_xlat23
            + 3.82999992;\n        u_xlat23 = u_xlat5.x * u_xlat23 + 0.458999991;\n       
            u_xlat5.x = u_xlat5.x * u_xlat23 + -0.00286999997;\n        u_xlat5.xyz
            = u_xlat5.xyy * vec3(1.44269502, 0.25, 0.249900013);\n        u_xlat5.x
            = exp2(u_xlat5.x);\n        u_xlat5.x = u_xlat5.x * 0.25 + u_xlat5.y;\n       
            u_xlat14.xz = vec2(u_xlat29) * vec2(0.5, 20.0);\n        u_xlat6.xyz
            = u_xlat2.xyz * u_xlat14.xxx;\n        u_xlat6.xyz = u_xlat6.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat29 = dot(u_xlat6.xyz,
            u_xlat6.xyz);\n        u_xlat29 = sqrt(u_xlat29);\n        u_xlat29 =
            (-u_xlat29) + 1.0;\n        u_xlat29 = u_xlat29 * 230.831207;\n       
            u_xlat29 = exp2(u_xlat29);\n        u_xlat5.x = u_xlat29 * u_xlat5.x
            + (-u_xlat5.z);\n        u_xlat5.x = max(u_xlat5.x, 0.0);\n        u_xlat5.x
            = min(u_xlat5.x, 50.0);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat5.xyz
            = (-u_xlat5.xxx) * u_xlat6.xyz;\n        u_xlat5.xyz = u_xlat5.xyz *
            vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat5.xyz);\n       
            u_xlat29 = u_xlat14.z * u_xlat29;\n        u_xlat5.xyz = u_xlat0.xyz
            * vec3(u_xlat29);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.xxx
            + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat4.xyz
            = u_xlat5.xyz * u_xlat6.xyz;\n        u_xlat16_4.xyz = u_xlat4.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat16_3.xyz = vec3(_GroundColor.x,
            _GroundColor.y, _GroundColor.z) * vec3(_GroundColor.x, _GroundColor.y,
            _GroundColor.z);\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz
            + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n   
            u_xlat16_30 = dot(_WorldSpaceLightPos0.xyz, (-u_xlat2.xyz));\n    u_xlat16_30
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_30 = u_xlat16_30 * 0.75 +
            0.75;\n    u_xlat16_7.xyz = vec3(u_xlat16_30) * u_xlat16_4.xyz;\n   
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Exposure);\n    u_xlat16_30 =
            dot(_LightColor0.xyz, _LightColor0.xyz);\n    u_xlat16_30 = sqrt(u_xlat16_30);\n   
            u_xlat16_30 = max(u_xlat16_30, 0.25);\n    u_xlat16_30 = min(u_xlat16_30,
            1.0);\n    u_xlat16_0.xyz = u_xlat16_0.xyz;\n    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz,
            0.0, 1.0);\n    u_xlat16_8.xyz = u_xlat16_0.xyz * _LightColor0.xyz;\n   
            u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(15.0, 15.0, 15.0);\n    u_xlat16_8.xyz
            = u_xlat16_8.xyz / vec3(u_xlat16_30);\n    vs_TEXCOORD1.xyz = sqrt(u_xlat16_3.xyz);\n   
            vs_TEXCOORD2.xyz = sqrt(u_xlat16_7.xyz);\n    vs_TEXCOORD3.xyz = sqrt(u_xlat16_8.xyz);\n   
            vs_TEXCOORD0.xyz = (-u_xlat2.xyz);\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tmediump float
            _SunSize;\nuniform \tmediump float _SunSizeConvergence;\nvarying highp
            vec3 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying mediump
            vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\n#define SV_Target0
            gl_FragData[0]\nmediump vec2 u_xlat16_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump float u_xlat16_6;\nvoid
            main()\n{\n    u_xlat16_0.x = log2(_SunSize);\n    u_xlat16_0.x = u_xlat16_0.x
            * 0.649999976;\n    u_xlat16_0.x = exp2(u_xlat16_0.x);\n    u_xlat1.x
            = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n   
            u_xlat1.xyz = u_xlat1.xxx * vs_TEXCOORD0.xyz;\n    u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz,
            (-u_xlat1.xyz));\n    u_xlat16_3.x = clamp(u_xlat16_3.x, 0.0, 1.0);\n   
            u_xlat16_3.x = log2(u_xlat16_3.x);\n    u_xlat16_3.x = u_xlat16_3.x *
            _SunSizeConvergence;\n    u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_6
            = (-u_xlat16_3.x) * 1.98000002 + 1.98010004;\n    u_xlat16_0.y = u_xlat16_3.x
            * u_xlat16_3.x + 1.0;\n    u_xlat16_0.xy = u_xlat16_0.xy * vec2(10.0,
            0.0100164423);\n    u_xlat16_6 = log2(u_xlat16_6);\n    u_xlat16_0.x
            = u_xlat16_6 * u_xlat16_0.x;\n    u_xlat16_0.x = exp2(u_xlat16_0.x);\n   
            u_xlat16_0.x = max(u_xlat16_0.x, 9.99999975e-05);\n    u_xlat16_0.x =
            u_xlat16_0.y / u_xlat16_0.x;\n    u_xlat16_0.x = log2(u_xlat16_0.x);\n   
            u_xlat16_0.x = u_xlat16_0.x * 0.454544991;\n    u_xlat16_0.x = exp2(u_xlat16_0.x);\n   
            u_xlat16_3.x = u_xlat1.y * 50.0;\n    u_xlat16_3.x = clamp(u_xlat16_3.x,
            0.0, 1.0);\n    u_xlatb1 = u_xlat1.y<0.0;\n    u_xlat16_2.xyz = vs_TEXCOORD1.xyz
            + (-vs_TEXCOORD2.xyz);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_2.xyz
            + vs_TEXCOORD2.xyz;\n    u_xlat16_2.xyz = vs_TEXCOORD3.xyz * u_xlat16_0.xxx
            + u_xlat16_3.xyz;\n    SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_2.xyz
            : u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 2
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_HIGH_QUALITY
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
          - Key: LIGHTMODE
            Value: ALWAYS
        definedKeywords:
        - _SUNDISK_NONE
        - _SUNDISK_SIMPLE
        - _SUNDISK_HIGH_QUALITY
        keywordGroups:
        - Keywords:
          - _SUNDISK_NONE
          - _SUNDISK_SIMPLE
          - _SUNDISK_HIGH_QUALITY
        ContainsInvalidVariant: 0
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: PreviewType
          Value: Skybox
        - Key: QUEUE
          Value: Background
        - Key: RenderType
          Value: Background
        - Key: LIGHTMODE
          Value: ALWAYS
        UsePass: 0
      sourceShader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: PreviewType
        Value: Skybox
      - Key: QUEUE
        Value: Background
      - Key: RenderType
        Value: Background
      UsePass: 0
    Shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - _SUNDISK_NONE
    - _SUNDISK_SIMPLE
    - _SUNDISK_HIGH_QUALITY
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform
            \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat10_0 + _TextureSampleAdd;\n    u_xlat0 = u_xlat0 * vs_COLOR0;\n   
            SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n    SV_Target0.w = u_xlat0.w;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
          - Key: LIGHTMODE
            Value: ALWAYS
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform
            \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump
            float u_xlat16_1;\nbool u_xlatb2;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 + _TextureSampleAdd;\n   
            u_xlat16_1 = vs_COLOR0.w * u_xlat0.w + -0.00100000005;\n    u_xlat0 =
            u_xlat0 * vs_COLOR0;\n    u_xlatb2 = u_xlat16_1<0.0;\n    if(u_xlatb2){discard;}\n   
            SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n    SV_Target0.w = u_xlat0.w;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
          - Key: LIGHTMODE
            Value: ALWAYS
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform
            \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nvoid
            main()\n{\n    u_xlat0.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy
            = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xy *
            vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n   
            u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 + _TextureSampleAdd;\n   
            u_xlat0 = u_xlat0 * vs_COLOR0;\n    u_xlat16_1 = u_xlat16_1 * u_xlat0.w;\n   
            SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat16_1);\n    SV_Target0.w =
            u_xlat16_1;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 2
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
          - Key: LIGHTMODE
            Value: ALWAYS
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform
            \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nbool u_xlatb0;\nmediump
            float u_xlat16_1;\nmediump float u_xlat16_3;\nvoid main()\n{\n    u_xlat0.xy
            = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n   
            u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy,
            0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat10_0 =
            texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 + _TextureSampleAdd;\n   
            u_xlat0 = u_xlat0 * vs_COLOR0;\n    u_xlat16_3 = u_xlat0.w * u_xlat16_1
            + -0.00100000005;\n    u_xlat16_1 = u_xlat16_1 * u_xlat0.w;\n    SV_Target0.xyz
            = u_xlat0.xyz * vec3(u_xlat16_1);\n    SV_Target0.w = u_xlat16_1;\n   
            u_xlatb0 = u_xlat16_3<0.0;\n    if(u_xlatb0){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          Index: 3
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
          - Key: LIGHTMODE
            Value: ALWAYS
        definedKeywords:
        - _
        - UNITY_UI_CLIP_RECT
        - UNITY_UI_ALPHACLIP
        keywordGroups:
        - Keywords:
          - _
          - UNITY_UI_CLIP_RECT
        - Keywords:
          - _
          - UNITY_UI_ALPHACLIP
        ContainsInvalidVariant: 0
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        - Key: LIGHTMODE
          Value: ALWAYS
        UsePass: 0
      sourceShader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
      UsePass: 0
    Shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - UNITY_UI_CLIP_RECT
    - UNITY_UI_ALPHACLIP
    - _
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - ShaderVariants: []
        definedKeywords:
        - _
        - _MAIN_LIGHT_SHADOWS
        - _MAIN_LIGHT_SHADOWS_CASCADE
        - _ADDITIONAL_LIGHTS_VERTEX
        - _ADDITIONAL_LIGHTS
        - LIGHTMAP_SHADOW_MIXING
        - SHADOWS_SHADOWMASK
        - DIRLIGHTMAP_COMBINED
        - LIGHTMAP_ON
        - DOTS_INSTANCING_ON
        - __
        - FOG_LINEAR
        - FOG_EXP
        - FOG_EXP2
        - INSTANCING_ON
        - _NORMALMAP
        - _PARALLAXMAP
        - _DETAIL_MULX2
        - _DETAIL_SCALED
        - _RECEIVE_SHADOWS_OFF
        - _SHADOWS_SOFT
        - _ADDITIONAL_LIGHT_SHADOWS
        - _SCREEN_SPACE_OCCLUSION
        - _ALPHATEST_ON
        - _ALPHAPREMULTIPLY_ON
        - _EMISSION
        - _METALLICSPECGLOSSMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _OCCLUSIONMAP
        - _SPECULARHIGHLIGHTS_OFF
        - _ENVIRONMENTREFLECTIONS_OFF
        - _SPECULAR_SETUP
        keywordGroups:
        - Keywords:
          - _
          - _MAIN_LIGHT_SHADOWS
        - Keywords:
          - _
          - _MAIN_LIGHT_SHADOWS_CASCADE
        - Keywords:
          - _
          - _ADDITIONAL_LIGHTS_VERTEX
          - _ADDITIONAL_LIGHTS
        - Keywords:
          - _
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - _
          - SHADOWS_SHADOWMASK
        - Keywords:
          - _
          - DIRLIGHTMAP_COMBINED
        - Keywords:
          - _
          - LIGHTMAP_ON
        - Keywords:
          - _
          - DOTS_INSTANCING_ON
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - __
          - INSTANCING_ON
        - Keywords:
          - _
          - _NORMALMAP
        - Keywords:
          - _
          - _PARALLAXMAP
        - Keywords:
          - _
          - _DETAIL_MULX2
          - _DETAIL_SCALED
        - Keywords:
          - _
          - _RECEIVE_SHADOWS_OFF
        ContainsInvalidVariant: 0
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: UniversalForward
        - Key: RenderPipeline
          Value: UniversalPipeline
        - Key: RenderType
          Value: Opaque
        - Key: ShaderModel
          Value: 4.5
        - Key: UniversalMaterialType
          Value: Lit
        UsePass: 0
      - ShaderVariants: []
        definedKeywords:
        - _
        - DOTS_INSTANCING_ON
        - __
        - INSTANCING_ON
        - _ALPHATEST_ON
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        keywordGroups:
        - Keywords:
          - _
          - DOTS_INSTANCING_ON
        - Keywords:
          - __
          - INSTANCING_ON
        ContainsInvalidVariant: 0
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: RenderPipeline
          Value: UniversalPipeline
        - Key: RenderType
          Value: Opaque
        - Key: ShaderModel
          Value: 4.5
        - Key: UniversalMaterialType
          Value: Lit
        UsePass: 0
      sourceShader: {fileID: 4800000, guid: 933532a4fcc9baf4fa0491de14d08ed7, type: 3}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: RenderPipeline
        Value: UniversalPipeline
      - Key: RenderType
        Value: Opaque
      - Key: ShaderModel
        Value: 4.5
      - Key: UniversalMaterialType
        Value: Lit
      UsePass: 0
    - Index: 1
      Passes:
      - ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _BaseMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying highp vec3
            vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD5;\nvarying
            mediump vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nbvec3 u_xlatb0;\nvec4 u_xlat1;\nmediump
            vec3 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec3
            u_xlat4;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _BaseMap_ST.xy + _BaseMap_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat15 = max(u_xlat15,
            1.17549435e-38);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat0.xyz
            = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat16_1.x = u_xlat0.y * u_xlat0.y;\n   
            u_xlat16_1.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_1.x);\n    u_xlat16_2
            = u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_2);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_2);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_2);\n    u_xlat16_1.xyz = unity_SHC.xyz * u_xlat16_1.xxx + u_xlat16_3.xyz;\n   
            vs_TEXCOORD3.xyz = u_xlat0.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_2.x
            = dot(unity_SHAr, u_xlat0);\n    u_xlat16_2.y = dot(unity_SHAg, u_xlat0);\n   
            u_xlat16_2.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_1.xyz = u_xlat16_1.xyz
            + u_xlat16_2.xyz;\n    u_xlat16_2.xyz = log2(abs(u_xlat16_1.xyz));\n   
            u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat16_2.xyz = exp2(u_xlat16_2.xyz);\n    u_xlat16_2.xyz = u_xlat16_2.xyz
            * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997,
            -0.0549999997);\n    u_xlat16_3.xyz = u_xlat16_1.xyz * vec3(12.9200001,
            12.9200001, 12.9200001);\n    u_xlatb0.xyz = greaterThanEqual(vec4(0.00313080009,
            0.00313080009, 0.00313080009, 0.0), u_xlat16_1.xyzx).xyz;\n    u_xlat16_1.x
            = (u_xlatb0.x) ? u_xlat16_3.x : u_xlat16_2.x;\n    u_xlat16_1.y = (u_xlatb0.y)
            ? u_xlat16_3.y : u_xlat16_2.y;\n    u_xlat16_1.z = (u_xlatb0.z) ? u_xlat16_3.z
            : u_xlat16_2.z;\n    vs_TEXCOORD1.xyz = max(u_xlat16_1.xyz, vec3(0.0,
            0.0, 0.0));\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    u_xlat4.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlatb15 = unity_OrthoParams.w==0.0;\n    vs_TEXCOORD5.x = (u_xlatb15)
            ? u_xlat4.x : hlslcc_mtx4x4unity_MatrixV[0].z;\n    vs_TEXCOORD5.y =
            (u_xlatb15) ? u_xlat4.y : hlslcc_mtx4x4unity_MatrixV[1].z;\n    vs_TEXCOORD5.z
            = (u_xlatb15) ? u_xlat4.z : hlslcc_mtx4x4unity_MatrixV[2].z;\n    vs_TEXCOORD6
            = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n   
            gl_Position = u_xlat0 + hlslcc_mtx4x4unity_MatrixVP[3];\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _MainLightPosition;\nuniform \tmediump vec4
            _MainLightColor;\nuniform \tmediump vec4 unity_LightData;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _BaseColor;\nuniform
            \tmediump float _Smoothness;\nuniform \tmediump float _Metallic;\nuniform
            \tmediump float _Surface;\nuniform lowp sampler2D _BaseMap;\nuniform
            lowp samplerCube unity_SpecCube0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying
            mediump vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD3;\nvarying
            highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nmediump
            vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nvec3 u_xlat6;\nvec3 u_xlat7;\nfloat u_xlat8;\nmediump
            vec3 u_xlat16_10;\nfloat u_xlat15;\nmediump float u_xlat16_17;\nfloat
            u_xlat22;\nmediump float u_xlat16_23;\nvoid main()\n{\n    u_xlat0 =
            dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);\n    u_xlat0 = max(u_xlat0,
            1.17549435e-38);\n    u_xlat0 = inversesqrt(u_xlat0);\n    u_xlat7.xyz
            = vec3(u_xlat0) * vs_TEXCOORD5.xyz;\n    u_xlat1.xyz = vs_TEXCOORD5.xyz
            * vec3(u_xlat0) + _MainLightPosition.xyz;\n    u_xlat16_2.x = dot((-u_xlat7.xyz),
            vs_TEXCOORD3.xyz);\n    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;\n   
            u_xlat16_2.xyz = vs_TEXCOORD3.xyz * (-u_xlat16_2.xxx) + (-u_xlat7.xyz);\n   
            u_xlat16_23 = dot(vs_TEXCOORD3.xyz, u_xlat7.xyz);\n    u_xlat16_23 =
            clamp(u_xlat16_23, 0.0, 1.0);\n    u_xlat16_23 = (-u_xlat16_23) + 1.0;\n   
            u_xlat16_23 = u_xlat16_23 * u_xlat16_23;\n    u_xlat16_23 = u_xlat16_23
            * u_xlat16_23;\n    u_xlat16_3.x = (-_Smoothness) + 1.0;\n    u_xlat16_10.x
            = (-u_xlat16_3.x) * 0.699999988 + 1.70000005;\n    u_xlat16_10.x = u_xlat16_10.x
            * u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_3.x;\n   
            u_xlat16_3.x = max(u_xlat16_3.x, 0.0078125);\n    u_xlat16_10.x = u_xlat16_10.x
            * 6.0;\n    u_xlat10_0 = textureCube(unity_SpecCube0, u_xlat16_2.xyz,
            u_xlat16_10.x);\n    u_xlat16_2.x = u_xlat10_0.w + -1.0;\n    u_xlat16_2.x
            = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.x = max(u_xlat16_2.x,
            0.0);\n    u_xlat16_2.x = log2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x
            * unity_SpecCube0_HDR.y;\n    u_xlat16_2.x = exp2(u_xlat16_2.x);\n   
            u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz
            = u_xlat10_0.xyz * u_xlat16_2.xxx;\n    u_xlat16_10.x = (-_Metallic)
            * 0.959999979 + 0.959999979;\n    u_xlat16_17 = (-u_xlat16_10.x) + _Smoothness;\n   
            u_xlat16_17 = u_xlat16_17 + 1.0;\n    u_xlat16_17 = clamp(u_xlat16_17,
            0.0, 1.0);\n    u_xlat10_0 = texture2D(_BaseMap, vs_TEXCOORD0.xy);\n   
            u_xlat16_4.xyz = u_xlat10_0.xyz * _BaseColor.xyz + vec3(-0.0399999991,
            -0.0399999991, -0.0399999991);\n    u_xlat16_0 = u_xlat10_0.wxyz * _BaseColor.wxyz;\n   
            u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz
            + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_5.xyz
            = vec3(u_xlat16_17) + (-u_xlat16_4.xyz);\n    u_xlat16_5.xyz = vec3(u_xlat16_23)
            * u_xlat16_5.xyz + u_xlat16_4.xyz;\n    u_xlat16_23 = u_xlat16_3.x *
            u_xlat16_3.x + 1.0;\n    u_xlat16_23 = float(1.0) / u_xlat16_23;\n   
            u_xlat6.xyz = u_xlat16_5.xyz * vec3(u_xlat16_23);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz * u_xlat6.xyz;\n    u_xlat16_10.xyz = u_xlat16_10.xxx
            * u_xlat16_0.yzw;\n    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * u_xlat16_10.xyz
            + u_xlat16_2.xyz;\n    u_xlat16_23 = dot(vs_TEXCOORD3.xyz, _MainLightPosition.xyz);\n   
            u_xlat16_23 = clamp(u_xlat16_23, 0.0, 1.0);\n    u_xlat16_23 = u_xlat16_23
            * unity_LightData.z;\n    u_xlat16_5.xyz = vec3(u_xlat16_23) * _MainLightColor.xyz;\n   
            u_xlat22 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat22 = max(u_xlat22,
            1.17549435e-38);\n    u_xlat22 = inversesqrt(u_xlat22);\n    u_xlat1.xyz
            = vec3(u_xlat22) * u_xlat1.xyz;\n    u_xlat22 = dot(_MainLightPosition.xyz,
            u_xlat1.xyz);\n    u_xlat22 = clamp(u_xlat22, 0.0, 1.0);\n    u_xlat1.x
            = dot(vs_TEXCOORD3.xyz, u_xlat1.xyz);\n    u_xlat1.x = clamp(u_xlat1.x,
            0.0, 1.0);\n    u_xlat1.x = u_xlat1.x * u_xlat1.x;\n    u_xlat16_23 =
            u_xlat22 * u_xlat22;\n    u_xlat8 = max(u_xlat16_23, 0.100000001);\n   
            u_xlat15 = u_xlat16_3.x * u_xlat16_3.x + -1.0;\n    u_xlat1.x = u_xlat1.x
            * u_xlat15 + 1.00001001;\n    u_xlat1.x = u_xlat1.x * u_xlat1.x;\n   
            u_xlat1.x = u_xlat8 * u_xlat1.x;\n    u_xlat8 = u_xlat16_3.x * 4.0 +
            2.0;\n    u_xlat16_23 = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat1.x =
            u_xlat8 * u_xlat1.x;\n    u_xlat1.x = u_xlat16_23 / u_xlat1.x;\n    u_xlat16_23
            = u_xlat1.x + -6.10351563e-05;\n    u_xlat16_23 = max(u_xlat16_23, 0.0);\n   
            u_xlat16_23 = min(u_xlat16_23, 100.0);\n    u_xlat16_3.xyz = u_xlat16_4.xyz
            * vec3(u_xlat16_23) + u_xlat16_10.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz
            * u_xlat16_5.xyz + u_xlat16_2.xyz;\n    u_xlatb1 = _Surface==1.0;\n   
            SV_Target0.w = (u_xlatb1) ? u_xlat16_0.x : 1.0;\n    return;\n}\n\n"
          LOD: 300
          readDepth: 0
          Index: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: RenderPipeline
            Value: UniversalPipeline
          - Key: RenderType
            Value: Opaque
          - Key: ShaderModel
            Value: 2.0
          - Key: UniversalMaterialType
            Value: Lit
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _BaseMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying highp vec3
            vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD5;\nvarying
            mediump vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nbvec3 u_xlatb0;\nvec4 u_xlat1;\nmediump
            vec3 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec3
            u_xlat4;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _BaseMap_ST.xy + _BaseMap_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat15 = max(u_xlat15,
            1.17549435e-38);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat0.xyz
            = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat16_1.x = u_xlat0.y * u_xlat0.y;\n   
            u_xlat16_1.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_1.x);\n    u_xlat16_2
            = u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_2);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_2);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_2);\n    u_xlat16_1.xyz = unity_SHC.xyz * u_xlat16_1.xxx + u_xlat16_3.xyz;\n   
            vs_TEXCOORD3.xyz = u_xlat0.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_2.x
            = dot(unity_SHAr, u_xlat0);\n    u_xlat16_2.y = dot(unity_SHAg, u_xlat0);\n   
            u_xlat16_2.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_1.xyz = u_xlat16_1.xyz
            + u_xlat16_2.xyz;\n    u_xlat16_2.xyz = log2(abs(u_xlat16_1.xyz));\n   
            u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat16_2.xyz = exp2(u_xlat16_2.xyz);\n    u_xlat16_2.xyz = u_xlat16_2.xyz
            * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997,
            -0.0549999997);\n    u_xlat16_3.xyz = u_xlat16_1.xyz * vec3(12.9200001,
            12.9200001, 12.9200001);\n    u_xlatb0.xyz = greaterThanEqual(vec4(0.00313080009,
            0.00313080009, 0.00313080009, 0.0), u_xlat16_1.xyzx).xyz;\n    u_xlat16_1.x
            = (u_xlatb0.x) ? u_xlat16_3.x : u_xlat16_2.x;\n    u_xlat16_1.y = (u_xlatb0.y)
            ? u_xlat16_3.y : u_xlat16_2.y;\n    u_xlat16_1.z = (u_xlatb0.z) ? u_xlat16_3.z
            : u_xlat16_2.z;\n    vs_TEXCOORD1.xyz = max(u_xlat16_1.xyz, vec3(0.0,
            0.0, 0.0));\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    u_xlat4.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlatb15 = unity_OrthoParams.w==0.0;\n    vs_TEXCOORD5.x = (u_xlatb15)
            ? u_xlat4.x : hlslcc_mtx4x4unity_MatrixV[0].z;\n    vs_TEXCOORD5.y =
            (u_xlatb15) ? u_xlat4.y : hlslcc_mtx4x4unity_MatrixV[1].z;\n    vs_TEXCOORD5.z
            = (u_xlatb15) ? u_xlat4.z : hlslcc_mtx4x4unity_MatrixV[2].z;\n    vs_TEXCOORD6
            = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n   
            gl_Position = u_xlat0 + hlslcc_mtx4x4unity_MatrixVP[3];\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _MainLightPosition;\nuniform \tmediump vec4
            _MainLightColor;\nuniform \tmediump vec4 _AdditionalLightsCount;\nuniform
            \tvec4 _AdditionalLightsPosition[16];\nuniform \tmediump vec4 _AdditionalLightsColor[16];\nuniform
            \tmediump vec4 _AdditionalLightsAttenuation[16];\nuniform \tmediump vec4
            _AdditionalLightsSpotDir[16];\nuniform \tmediump vec4 unity_LightData;\nuniform
            \tmediump vec4 unity_LightIndices[2];\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tmediump vec4 _BaseColor;\nuniform \tmediump float _Smoothness;\nuniform
            \tmediump float _Metallic;\nuniform \tmediump float _Surface;\nuniform
            lowp sampler2D _BaseMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying
            highp vec2 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying
            highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp
            vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp
            vec4 u_xlat10_0;\nbool u_xlatb0;\nmediump vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump
            vec4 u_xlat16_3;\nmediump vec4 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nlowp
            vec4 u_xlat10_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3
            u_xlat8;\nbool u_xlatb8;\nfloat u_xlat9;\nfloat u_xlat10;\nmediump vec3
            u_xlat16_11;\nfloat u_xlat12;\nmediump vec3 u_xlat16_13;\nmediump float
            u_xlat16_15;\nmediump vec3 u_xlat16_16;\nfloat u_xlat20;\nvec3 u_xlat21;\nfloat
            u_xlat24;\nint u_xlati24;\nmediump vec2 u_xlat16_28;\nfloat u_xlat36;\nint
            u_xlati36;\nfloat u_xlat38;\nint u_xlati38;\nbool u_xlatb38;\nmediump
            float u_xlat16_40;\nmediump float u_xlat16_41;\nfloat u_xlat44;\n#define
            UNITY_DYNAMIC_INDEX_ES2 0\n\n\n\n\n\n\nvec4 _AdditionalLightsPositionDynamicIndex(int
            i){\n#if UNITY_DYNAMIC_INDEX_ES2\n    return _AdditionalLightsPosition[i];\n#else\n#define
            d_ar _AdditionalLightsPosition\n    if (i <= 0) return d_ar[0]; else
            if (i == 1) return d_ar[1]; else if (i == 2) return d_ar[2]; else if
            (i == 3) return d_ar[3]; else if (i == 4) return d_ar[4]; else if (i
            == 5) return d_ar[5]; else if (i == 6) return d_ar[6]; else if (i ==
            7) return d_ar[7]; else if (i == 8) return d_ar[8]; else if (i == 9)
            return d_ar[9]; else if (i == 10) return d_ar[10]; else if (i == 11)
            return d_ar[11]; else if (i == 12) return d_ar[12]; else if (i == 13)
            return d_ar[13]; else if (i == 14) return d_ar[14]; else if (i == 15)
            return d_ar[15];\n    return d_ar[0];\n#undef d_ar\n#endif\n}\n\n\nmediump
            vec4 _AdditionalLightsAttenuationDynamicIndex(int i){\n#if UNITY_DYNAMIC_INDEX_ES2\n   
            return _AdditionalLightsAttenuation[i];\n#else\n#define d_ar _AdditionalLightsAttenuation\n   
            if (i <= 0) return d_ar[0]; else if (i == 1) return d_ar[1]; else if
            (i == 2) return d_ar[2]; else if (i == 3) return d_ar[3]; else if (i
            == 4) return d_ar[4]; else if (i == 5) return d_ar[5]; else if (i ==
            6) return d_ar[6]; else if (i == 7) return d_ar[7]; else if (i == 8)
            return d_ar[8]; else if (i == 9) return d_ar[9]; else if (i == 10) return
            d_ar[10]; else if (i == 11) return d_ar[11]; else if (i == 12) return
            d_ar[12]; else if (i == 13) return d_ar[13]; else if (i == 14) return
            d_ar[14]; else if (i == 15) return d_ar[15];\n    return d_ar[0];\n#undef
            d_ar\n#endif\n}\n\n\nmediump vec4 _AdditionalLightsSpotDirDynamicIndex(int
            i){\n#if UNITY_DYNAMIC_INDEX_ES2\n    return _AdditionalLightsSpotDir[i];\n#else\n#define
            d_ar _AdditionalLightsSpotDir\n    if (i <= 0) return d_ar[0]; else if
            (i == 1) return d_ar[1]; else if (i == 2) return d_ar[2]; else if (i
            == 3) return d_ar[3]; else if (i == 4) return d_ar[4]; else if (i ==
            5) return d_ar[5]; else if (i == 6) return d_ar[6]; else if (i == 7)
            return d_ar[7]; else if (i == 8) return d_ar[8]; else if (i == 9) return
            d_ar[9]; else if (i == 10) return d_ar[10]; else if (i == 11) return
            d_ar[11]; else if (i == 12) return d_ar[12]; else if (i == 13) return
            d_ar[13]; else if (i == 14) return d_ar[14]; else if (i == 15) return
            d_ar[15];\n    return d_ar[0];\n#undef d_ar\n#endif\n}\n\n\nmediump vec4
            _AdditionalLightsColorDynamicIndex(int i){\n#if UNITY_DYNAMIC_INDEX_ES2\n   
            return _AdditionalLightsColor[i];\n#else\n#define d_ar _AdditionalLightsColor\n   
            if (i <= 0) return d_ar[0]; else if (i == 1) return d_ar[1]; else if
            (i == 2) return d_ar[2]; else if (i == 3) return d_ar[3]; else if (i
            == 4) return d_ar[4]; else if (i == 5) return d_ar[5]; else if (i ==
            6) return d_ar[6]; else if (i == 7) return d_ar[7]; else if (i == 8)
            return d_ar[8]; else if (i == 9) return d_ar[9]; else if (i == 10) return
            d_ar[10]; else if (i == 11) return d_ar[11]; else if (i == 12) return
            d_ar[12]; else if (i == 13) return d_ar[13]; else if (i == 14) return
            d_ar[14]; else if (i == 15) return d_ar[15];\n    return d_ar[0];\n#undef
            d_ar\n#endif\n}\n\nvoid main()\n{\n    u_xlat10_0 = texture2D(_BaseMap,
            vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_0.wxyz * _BaseColor.wxyz;\n   
            u_xlat36 = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);\n    u_xlat36 = max(u_xlat36,
            1.17549435e-38);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat2.xyz
            = vec3(u_xlat36) * vs_TEXCOORD5.xyz;\n    u_xlat16_3.x = (-_Metallic)
            * 0.959999979 + 0.959999979;\n    u_xlat16_15 = (-u_xlat16_3.x) + _Smoothness;\n   
            u_xlat16_13.xyz = u_xlat16_1.yzw * u_xlat16_3.xxx;\n    u_xlat16_3.xzw
            = u_xlat10_0.xyz * _BaseColor.xyz + vec3(-0.0399999991, -0.0399999991,
            -0.0399999991);\n    u_xlat16_3.xzw = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_3.xzw + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n   
            u_xlat16_4.x = (-_Smoothness) + 1.0;\n    u_xlat16_16.x = u_xlat16_4.x
            * u_xlat16_4.x;\n    u_xlat16_16.x = max(u_xlat16_16.x, 0.0078125);\n   
            u_xlat16_15 = u_xlat16_15 + 1.0;\n    u_xlat16_15 = clamp(u_xlat16_15,
            0.0, 1.0);\n    u_xlat0 = u_xlat16_16.x * 4.0 + 2.0;\n    u_xlat12 =
            u_xlat16_16.x * u_xlat16_16.x + -1.0;\n    u_xlat16_40 = dot((-u_xlat2.xyz),
            vs_TEXCOORD3.xyz);\n    u_xlat16_40 = u_xlat16_40 + u_xlat16_40;\n   
            u_xlat16_5.xyz = vs_TEXCOORD3.xyz * (-vec3(u_xlat16_40)) + (-u_xlat2.xyz);\n   
            u_xlat16_40 = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);\n    u_xlat16_40 =
            clamp(u_xlat16_40, 0.0, 1.0);\n    u_xlat16_16.z = (-u_xlat16_40) + 1.0;\n   
            u_xlat16_28.xy = u_xlat16_16.xz * u_xlat16_16.xz;\n    u_xlat16_40 =
            u_xlat16_28.y * u_xlat16_28.y;\n    u_xlat16_41 = (-u_xlat16_4.x) * 0.699999988
            + 1.70000005;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_41;\n    u_xlat16_4.x
            = u_xlat16_4.x * 6.0;\n    u_xlat10_5 = textureCube(unity_SpecCube0,
            u_xlat16_5.xyz, u_xlat16_4.x);\n    u_xlat16_4.x = u_xlat10_5.w + -1.0;\n   
            u_xlat16_4.x = unity_SpecCube0_HDR.w * u_xlat16_4.x + 1.0;\n    u_xlat16_4.x
            = max(u_xlat16_4.x, 0.0);\n    u_xlat16_4.x = log2(u_xlat16_4.x);\n   
            u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.y;\n    u_xlat16_4.x
            = exp2(u_xlat16_4.x);\n    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_6.xyz = u_xlat10_5.xyz * u_xlat16_4.xxx;\n    u_xlat16_4.x =
            u_xlat16_16.x * u_xlat16_16.x + 1.0;\n    u_xlat16_4.x = float(1.0) /
            u_xlat16_4.x;\n    u_xlat16_7.xyz = (-u_xlat16_3.xzw) + vec3(u_xlat16_15);\n   
            u_xlat16_7.xyz = vec3(u_xlat16_40) * u_xlat16_7.xyz + u_xlat16_3.xzw;\n   
            u_xlat8.xyz = u_xlat16_4.xxx * u_xlat16_7.xyz;\n    u_xlat16_4.xyw =
            u_xlat16_6.xyz * u_xlat8.xyz;\n    u_xlat16_4.xyw = vs_TEXCOORD1.xyz
            * u_xlat16_13.xyz + u_xlat16_4.xyw;\n    u_xlat16_15 = dot(vs_TEXCOORD3.xyz,
            _MainLightPosition.xyz);\n    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);\n   
            u_xlat16_15 = u_xlat16_15 * unity_LightData.z;\n    u_xlat16_6.xyz =
            vec3(u_xlat16_15) * _MainLightColor.xyz;\n    u_xlat8.xyz = vs_TEXCOORD5.xyz
            * vec3(u_xlat36) + _MainLightPosition.xyz;\n    u_xlat24 = dot(u_xlat8.xyz,
            u_xlat8.xyz);\n    u_xlat24 = max(u_xlat24, 1.17549435e-38);\n    u_xlat24
            = inversesqrt(u_xlat24);\n    u_xlat8.xyz = vec3(u_xlat24) * u_xlat8.xyz;\n   
            u_xlat24 = dot(vs_TEXCOORD3.xyz, u_xlat8.xyz);\n    u_xlat24 = clamp(u_xlat24,
            0.0, 1.0);\n    u_xlat36 = dot(_MainLightPosition.xyz, u_xlat8.xyz);\n   
            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);\n    u_xlat24 = u_xlat24 * u_xlat24;\n   
            u_xlat24 = u_xlat24 * u_xlat12 + 1.00001001;\n    u_xlat16_15 = u_xlat36
            * u_xlat36;\n    u_xlat24 = u_xlat24 * u_xlat24;\n    u_xlat36 = max(u_xlat16_15,
            0.100000001);\n    u_xlat24 = u_xlat36 * u_xlat24;\n    u_xlat24 = u_xlat0
            * u_xlat24;\n    u_xlat24 = u_xlat16_28.x / u_xlat24;\n    u_xlat16_15
            = u_xlat24 + -6.10351563e-05;\n    u_xlat16_15 = max(u_xlat16_15, 0.0);\n   
            u_xlat16_15 = min(u_xlat16_15, 100.0);\n    u_xlat16_7.xyz = u_xlat16_3.xzw
            * vec3(u_xlat16_15) + u_xlat16_13.xyz;\n    u_xlat16_4.xyw = u_xlat16_7.xyz
            * u_xlat16_6.xyz + u_xlat16_4.xyw;\n    u_xlat16_15 = min(_AdditionalLightsCount.x,
            unity_LightData.y);\n    u_xlati24 = int(u_xlat16_15);\n    u_xlat16_6.xyz
            = u_xlat16_4.xyw;\n    for(int u_xlati_loop_1 = 0 ; u_xlati_loop_1<u_xlati24
            ; u_xlati_loop_1++)\n    {\n        u_xlat38 = float(u_xlati_loop_1);\n       
            u_xlatb8 = u_xlat38<2.0;\n        u_xlat16_7.xy = (bool(u_xlatb8)) ?
            unity_LightIndices[0].xy : unity_LightIndices[0].zw;\n        u_xlat20
            = u_xlat38 + -2.0;\n        u_xlat38 = (u_xlatb8) ? u_xlat38 : u_xlat20;\n       
            u_xlatb38 = u_xlat38<1.0;\n        u_xlat16_15 = (u_xlatb38) ? u_xlat16_7.x
            : u_xlat16_7.y;\n        u_xlati38 = int(u_xlat16_15);\n        u_xlat8.xyz
            = (-vs_TEXCOORD2.xyz) * _AdditionalLightsPositionDynamicIndex(u_xlati38).www
            + _AdditionalLightsPositionDynamicIndex(u_xlati38).xyz;\n        u_xlat44
            = dot(u_xlat8.xyz, u_xlat8.xyz);\n        u_xlat44 = max(u_xlat44, 6.10351563e-05);\n       
            u_xlat9 = inversesqrt(u_xlat44);\n        u_xlat21.xyz = u_xlat8.xyz
            * vec3(u_xlat9);\n        u_xlat10 = float(1.0) / u_xlat44;\n       
            u_xlat44 = u_xlat44 * _AdditionalLightsAttenuationDynamicIndex(u_xlati38).x
            + _AdditionalLightsAttenuationDynamicIndex(u_xlati38).y;\n        u_xlat44
            = clamp(u_xlat44, 0.0, 1.0);\n        u_xlat44 = u_xlat44 * u_xlat10;\n       
            u_xlat16_15 = dot(_AdditionalLightsSpotDirDynamicIndex(u_xlati38).xyz,
            u_xlat21.xyz);\n        u_xlat16_15 = u_xlat16_15 * _AdditionalLightsAttenuationDynamicIndex(u_xlati38).z
            + _AdditionalLightsAttenuationDynamicIndex(u_xlati38).w;\n        u_xlat16_15
            = clamp(u_xlat16_15, 0.0, 1.0);\n        u_xlat16_15 = u_xlat16_15 *
            u_xlat16_15;\n        u_xlat44 = u_xlat16_15 * u_xlat44;\n        u_xlat16_15
            = dot(vs_TEXCOORD3.xyz, u_xlat21.xyz);\n        u_xlat16_15 = clamp(u_xlat16_15,
            0.0, 1.0);\n        u_xlat16_15 = u_xlat16_15 * u_xlat44;\n        u_xlat16_7.xyz
            = vec3(u_xlat16_15) * _AdditionalLightsColorDynamicIndex(u_xlati38).xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz * vec3(u_xlat9) + u_xlat2.xyz;\n        u_xlat38
            = dot(u_xlat8.xyz, u_xlat8.xyz);\n        u_xlat38 = max(u_xlat38, 1.17549435e-38);\n       
            u_xlat38 = inversesqrt(u_xlat38);\n        u_xlat8.xyz = vec3(u_xlat38)
            * u_xlat8.xyz;\n        u_xlat38 = dot(vs_TEXCOORD3.xyz, u_xlat8.xyz);\n       
            u_xlat38 = clamp(u_xlat38, 0.0, 1.0);\n        u_xlat8.x = dot(u_xlat21.xyz,
            u_xlat8.xyz);\n        u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n       
            u_xlat38 = u_xlat38 * u_xlat38;\n        u_xlat38 = u_xlat38 * u_xlat12
            + 1.00001001;\n        u_xlat16_15 = u_xlat8.x * u_xlat8.x;\n       
            u_xlat38 = u_xlat38 * u_xlat38;\n        u_xlat8.x = max(u_xlat16_15,
            0.100000001);\n        u_xlat38 = u_xlat38 * u_xlat8.x;\n        u_xlat38
            = u_xlat0 * u_xlat38;\n        u_xlat38 = u_xlat16_28.x / u_xlat38;\n       
            u_xlat16_15 = u_xlat38 + -6.10351563e-05;\n        u_xlat16_15 = max(u_xlat16_15,
            0.0);\n        u_xlat16_15 = min(u_xlat16_15, 100.0);\n        u_xlat16_11.xyz
            = u_xlat16_3.xzw * vec3(u_xlat16_15) + u_xlat16_13.xyz;\n        u_xlat16_6.xyz
            = u_xlat16_11.xyz * u_xlat16_7.xyz + u_xlat16_6.xyz;\n    }\n    SV_Target0.xyz
            = u_xlat16_6.xyz;\n    u_xlatb0 = _Surface==1.0;\n    SV_Target0.w =
            (u_xlatb0) ? u_xlat16_1.x : 1.0;\n    return;\n}\n\n"
          LOD: 300
          readDepth: 0
          Index: 1
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - _ADDITIONAL_LIGHTS
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: RenderPipeline
            Value: UniversalPipeline
          - Key: RenderType
            Value: Opaque
          - Key: ShaderModel
            Value: 2.0
          - Key: UniversalMaterialType
            Value: Lit
        definedKeywords:
        - _
        - _MAIN_LIGHT_SHADOWS
        - _MAIN_LIGHT_SHADOWS_CASCADE
        - _ADDITIONAL_LIGHTS_VERTEX
        - _ADDITIONAL_LIGHTS
        - LIGHTMAP_SHADOW_MIXING
        - SHADOWS_SHADOWMASK
        - DIRLIGHTMAP_COMBINED
        - LIGHTMAP_ON
        - __
        - INSTANCING_ON
        - FOG_LINEAR
        - FOG_EXP
        - FOG_EXP2
        - _NORMALMAP
        - _PARALLAXMAP
        - _DETAIL_MULX2
        - _DETAIL_SCALED
        - _RECEIVE_SHADOWS_OFF
        - _SHADOWS_SOFT
        - _ADDITIONAL_LIGHT_SHADOWS
        - _SCREEN_SPACE_OCCLUSION
        - _ALPHATEST_ON
        - _ALPHAPREMULTIPLY_ON
        - _EMISSION
        - _METALLICSPECGLOSSMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _OCCLUSIONMAP
        - _SPECULARHIGHLIGHTS_OFF
        - _ENVIRONMENTREFLECTIONS_OFF
        - _SPECULAR_SETUP
        keywordGroups:
        - Keywords:
          - _
          - _MAIN_LIGHT_SHADOWS
        - Keywords:
          - _
          - _MAIN_LIGHT_SHADOWS_CASCADE
        - Keywords:
          - _
          - _ADDITIONAL_LIGHTS_VERTEX
          - _ADDITIONAL_LIGHTS
        - Keywords:
          - _
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - _
          - SHADOWS_SHADOWMASK
        - Keywords:
          - _
          - DIRLIGHTMAP_COMBINED
        - Keywords:
          - _
          - LIGHTMAP_ON
        - Keywords:
          - __
          - INSTANCING_ON
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - _
          - _NORMALMAP
        - Keywords:
          - _
          - _PARALLAXMAP
        - Keywords:
          - _
          - _DETAIL_MULX2
          - _DETAIL_SCALED
        - Keywords:
          - _
          - _RECEIVE_SHADOWS_OFF
        ContainsInvalidVariant: 0
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 1
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: UniversalForward
        - Key: RenderPipeline
          Value: UniversalPipeline
        - Key: RenderType
          Value: Opaque
        - Key: ShaderModel
          Value: 2.0
        - Key: UniversalMaterialType
          Value: Lit
        UsePass: 0
      - ShaderVariants:
        - NoShaderVariant: 0
          VertexProgram: "#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _BaseMap_ST;\nuniform \tvec4 _ShadowBias;\nuniform \tvec3 _LightDirection;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy
            * _BaseMap_ST.xy + _BaseMap_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;\n   
            u_xlat0.xyz = _LightDirection.xyz * _ShadowBias.xxx + u_xlat0.xyz;\n   
            u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = max(u_xlat6,
            1.17549435e-38);\n    u_xlat6 = inversesqrt(u_xlat6);\n    u_xlat1.xyz
            = vec3(u_xlat6) * u_xlat1.xyz;\n    u_xlat6 = dot(_LightDirection.xyz,
            u_xlat1.xyz);\n    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);\n    u_xlat6 =
            (-u_xlat6) + 1.0;\n    u_xlat6 = u_xlat6 * _ShadowBias.y;\n    u_xlat0.xyz
            = u_xlat1.xyz * vec3(u_xlat6) + u_xlat0.xyz;\n    u_xlat1 = u_xlat0.yyyy
            * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_MatrixVP[3];\n   
            gl_Position.z = max((-u_xlat0.w), u_xlat0.z);\n    gl_Position.xyw =
            u_xlat0.xyw;\n    return;\n}\n\n"
          FragmentProgram: "#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\n#define SV_TARGET0 gl_FragData[0]\nvoid main()\n{\n    SV_TARGET0
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          LOD: 300
          readDepth: 0
          Index: 2
          PassId: 1
          SubShaderIndex: 1
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: SHADOWCASTER
          - Key: RenderPipeline
            Value: UniversalPipeline
          - Key: RenderType
            Value: Opaque
          - Key: ShaderModel
            Value: 2.0
          - Key: UniversalMaterialType
            Value: Lit
        definedKeywords:
        - __
        - INSTANCING_ON
        - _ALPHATEST_ON
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        keywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
        ContainsInvalidVariant: 0
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 1
        SerializedObjectId: 1
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: RenderPipeline
          Value: UniversalPipeline
        - Key: RenderType
          Value: Opaque
        - Key: ShaderModel
          Value: 2.0
        - Key: UniversalMaterialType
          Value: Lit
        UsePass: 0
      sourceShader: {fileID: 4800000, guid: 933532a4fcc9baf4fa0491de14d08ed7, type: 3}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: RenderPipeline
        Value: UniversalPipeline
      - Key: RenderType
        Value: Opaque
      - Key: ShaderModel
        Value: 2.0
      - Key: UniversalMaterialType
        Value: Lit
      UsePass: 0
    Shader: {fileID: 4800000, guid: 933532a4fcc9baf4fa0491de14d08ed7, type: 3}
    ShaderPath: Packages/com.unity.render-pipelines.universal/Shaders/Lit.shader
    ShaderDefinedKeywords:
    - LIGHTMAP_ON
    - DIRLIGHTMAP_COMBINED
    - FOG_LINEAR
    - FOG_EXP
    - FOG_EXP2
    - _ADDITIONAL_LIGHTS
    - _ADDITIONAL_LIGHTS_VERTEX
    - _SCREEN_SPACE_OCCLUSION
    - _NORMALMAP
    - _PARALLAXMAP
    - _DETAIL_MULX2
    - _DETAIL_SCALED
    - _RECEIVE_SHADOWS_OFF
    - _ALPHATEST_ON
    - _ALPHAPREMULTIPLY_ON
    - _EMISSION
    - _METALLICSPECGLOSSMAP
    - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
    - _OCCLUSIONMAP
    - _SPECULARHIGHLIGHTS_OFF
    - _ENVIRONMENTREFLECTIONS_OFF
    - _SPECULAR_SETUP
    - _GBUFFER_NORMALS_OCT
    - _MIXED_LIGHTING_SUBTRACTIVE
    - _
    - _MAIN_LIGHT_SHADOWS
    - _MAIN_LIGHT_SHADOWS_CASCADE
    - LIGHTMAP_SHADOW_MIXING
    - SHADOWS_SHADOWMASK
    - DOTS_INSTANCING_ON
    - __
    - INSTANCING_ON
    - _SHADOWS_SOFT
  _modifiedShaders: []
